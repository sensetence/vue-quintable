{"version":3,"file":"vue-quintable.es.js","sources":["../node_modules/pretty-checkbox-vue/check.js","../node_modules/uuid/lib/rng-browser.js","../node_modules/uuid/lib/bytesToUuid.js","../node_modules/uuid/v4.js","../src/components/VueQuintable.vue","../src/index.js"],"sourcesContent":["/*!\n * pretty-checkbox-vue v1.1.9\n * (c) 2017-2018 Hamed Ehtesham\n * Released under the MIT License.\n */\n!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(\"PrettyCheck\",[],t):\"object\"==typeof exports?exports.PrettyCheck=t():e.PrettyCheck=t()}(\"undefined\"!=typeof self?self:this,function(){return function(e){var t={};function i(s){if(t[s])return t[s].exports;var n=t[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,i),n.l=!0,n.exports}return i.m=e,i.c=t,i.d=function(e,t,s){i.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:s})},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,\"a\",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p=\"\",i(i.s=1)}([function(e,t){e.exports=function(e,t,i,s,n,r){var o,a=e=e||{},u=typeof e.default;\"object\"!==u&&\"function\"!==u||(o=e,a=e.default);var h,l=\"function\"==typeof a?a.options:a;if(t&&(l.render=t.render,l.staticRenderFns=t.staticRenderFns,l._compiled=!0),i&&(l.functional=!0),n&&(l._scopeId=n),r?(h=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),s&&s.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},l._ssrRegister=h):s&&(h=s),h){var d=l.functional,c=d?l.render:l.beforeCreate;d?(l._injectStyles=h,l.render=function(e,t){return h.call(t),c(e,t)}):l.beforeCreate=c?[].concat(c,h):[h]}return{esModule:o,exports:a,options:l}}},function(e,t,i){var s=i(0)(i(2),null,!1,null,null,null);s.options.__file=\"src/PrettyCheckbox.vue\",e.exports=s.exports},function(e,t,i){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var s=i(3),n={name:\"pretty-checkbox\",input_type:\"checkbox\",model:s.model,props:s.props,data:s.data,computed:s.computed,watch:s.watch,mounted:s.mounted,methods:s.methods,render:s.render};t.default=n},function(e,t,i){var s=i(0)(i(4),i(5),!1,null,null,null);s.options.__file=\"src/PrettyInput.vue\",e.exports=s.exports},function(e,t,i){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default={name:\"pretty-input\",model:{prop:\"modelValue\",event:\"change\"},props:{type:String,name:String,value:{},modelValue:{},trueValue:{},falseValue:{},checked:{},disabled:{},required:{},indeterminate:{},color:String,offColor:String,hoverColor:String,indeterminateColor:String,toggle:{},hover:{},focus:{}},data:function(){return{m_checked:void 0,default_mode:!1}},computed:{_type:function(){return this.$options.input_type?this.$options.input_type:this.type?this.type:\"checkbox\"},shouldBeChecked:function(){return void 0!==this.modelValue?\"radio\"===this._type?this.modelValue===this.value:this.modelValue instanceof Array?this.modelValue.includes(this.value):this._trueValue?this.modelValue===this.trueValue:\"string\"==typeof this.modelValue||!!this.modelValue:void 0===this.m_checked?this.m_checked=\"string\"==typeof this.checked||!!this.checked:this.m_checked},_disabled:function(){return\"string\"==typeof this.disabled||!!this.disabled},_required:function(){return\"string\"==typeof this.required||!!this.required},_indeterminate:function(){return\"string\"==typeof this.indeterminate||!!this.indeterminate},_trueValue:function(){return\"string\"==typeof this.trueValue?this.trueValue:!!this.trueValue},_falseValue:function(){return\"string\"==typeof this.falseValue?this.falseValue:!!this.falseValue},_toggle:function(){return\"string\"==typeof this.toggle||!!this.toggle},_hover:function(){return\"string\"==typeof this.hover||!!this.hover},_focus:function(){return\"string\"==typeof this.focus||!!this.focus},classes:function(){return{pretty:!0,\"p-default\":this.default_mode,\"p-round\":\"radio\"===this._type&&this.default_mode,\"p-toggle\":this._toggle,\"p-has-hover\":this._hover,\"p-has-focus\":this._focus,\"p-has-indeterminate\":this._indeterminate}},onClasses:function(){var e={state:!0,\"p-on\":this._toggle};return this.color&&(e[\"p-\"+this.color]=!0),e},offClasses:function(){var e={state:!0,\"p-off\":!0};return this.offColor&&(e[\"p-\"+this.offColor]=!0),e},hoverClasses:function(){var e={state:!0,\"p-is-hover\":!0};return this.hoverColor&&(e[\"p-\"+this.hoverColor]=!0),e},indeterminateClasses:function(){var e={state:!0,\"p-is-indeterminate\":!0};return this.indeterminateColor&&(e[\"p-\"+this.indeterminateColor]=!0),e}},watch:{checked:function(e){this.m_checked=e},indeterminate:function(e){this.$refs.input.indeterminate=e}},mounted:function(){this.$vnode.data&&!this.$vnode.data.staticClass&&(this.default_mode=!0),this._indeterminate&&(this.$refs.input.indeterminate=!0),this.$el.setAttribute(\"p-\"+this._type,\"\")},methods:{updateInput:function(e){if(\"radio\"!==this._type){this.$emit(\"update:indeterminate\",!1);var t=e.target.checked;if(this.m_checked=t,this.modelValue instanceof Array){var i=[].concat(function(e){if(Array.isArray(e)){for(var t=0,i=Array(e.length);t<e.length;t++)i[t]=e[t];return i}return Array.from(e)}(this.modelValue));t?i.push(this.value):i.splice(i.indexOf(this.value),1),this.$emit(\"change\",i)}else this.$emit(\"change\",t?!this._trueValue||this.trueValue:!!this._falseValue&&this.falseValue)}else this.$emit(\"change\",this.value)}}}},function(e,t,i){var s=function(){var e=this.$createElement,t=this._self._c||e;return t(\"div\",{class:this.classes},[t(\"input\",{ref:\"input\",attrs:{type:this._type,name:this.name,disabled:this._disabled,required:this._required},domProps:{checked:this.shouldBeChecked,value:this.value},on:{change:this.updateInput}}),this._v(\" \"),t(\"div\",{class:this.onClasses},[this._t(\"extra\"),this._v(\" \"),t(\"label\",[this._t(\"default\")],2)],2),this._v(\" \"),this._toggle?t(\"div\",{class:this.offClasses},[this._t(\"off-extra\"),this._v(\" \"),this._t(\"off-label\")],2):this._e(),this._v(\" \"),this._hover?t(\"div\",{class:this.hoverClasses},[this._t(\"hover-extra\"),this._v(\" \"),this._t(\"hover-label\")],2):this._e(),this._v(\" \"),this._indeterminate?t(\"div\",{class:this.indeterminateClasses},[this._t(\"indeterminate-extra\"),this._v(\" \"),this._t(\"indeterminate-label\")],2):this._e()])};s._withStripped=!0,e.exports={render:s,staticRenderFns:[]}}])});","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","<template>\n  <div class=\"table-wrapper quintable\">\n    <div class=\"breakpoints quintable--breakpoints\">\n      <div ref=\"xs\"></div>\n      <div ref=\"sm\" class=\"d-none d-sm-block\"></div>\n      <div ref=\"md\" class=\"d-none d-md-block\"></div>\n      <div ref=\"lg\" class=\"d-none d-lg-block\"></div>\n      <div ref=\"xl\" class=\"d-none d-xl-block\"></div>\n      <div ref=\"xxl\" class=\"d-none d-xxl-block\"></div>\n    </div>\n    <div class=\"header slot slot-header quintable--header\">\n      <slot name=\"header\"></slot>\n    </div>\n\n    <div\n      v-if=\"configFinal.search\"\n      class=\"mb-3 quintable--search-container\"\n      :class=\"configFinal.searchContainerClass\"\n    >\n      <slot name=\"before-search\"></slot>\n      <slot\n        name=\"search\"\n        :value=\"query\"\n        :loading=\"loading\"\n        :setSearchQuery=\"setSearchQuery\"\n        :placeholder=\"configFinal.searchPlaceholder\"\n        :search-class=\"configFinal.searchClass\"\n      >\n        <div\n          class=\"quintable--search-container--input-container\"\n          :class=\"configFinal.searchClass\"\n        >\n          <input\n            type=\"search\"\n            :placeholder=\"configFinal.searchPlaceholder\"\n            v-model=\"query\"\n            class=\"form-control\"\n          />\n        </div>\n      </slot>\n      <slot name=\"after-search\"></slot>\n    </div>\n    <div class=\"slot slot-after-search quintable--after-search-container\">\n      <slot name=\"after-search-container\"></slot>\n    </div>\n    <div class=\"clearfix quintable--table-container\" ref=\"height-wrapper\">\n      <table\n        class=\"vue-quintable table quintable--table-container--table\"\n        :class=\"tableClasses\"\n        v-if=\"!ajaxLoading\"\n      >\n        <thead v-if=\"configFinal.headlines.length\">\n          <tr\n            class=\"\n              vue-quintable-header-row\n              quintable--table-container--table--header-row\n            \"\n          >\n            <th\n              class=\"\n                placeholder-th\n                toggle-th toggle-cell\n                quintable--table-container--table--header-row--placeholder-th\n              \"\n              v-if=\"hasGeneratedRows && !configFinal.hideRowToggle\"\n            >\n              <wbr />\n            </th>\n            <th\n              v-if=\"configFinal.select && configFinal.selectPosition === 'pre'\"\n              class=\"\n                select-th\n                pre\n                quintable--table-container--table--header-row--select-th\n                quintable--table-container--table--header-row--select-th--pre\n              \"\n            >\n              <template v-if=\"configFinal.selectAll && !noRows\">\n                <p-check\n                  v-if=\"configFinal.prettySelect\"\n                  name=\"check\"\n                  class=\"p-icon p-smooth\"\n                  v-model=\"allSelectedProperty\"\n                  @change=\"checkAll()\"\n                >\n                  <template slot=\"extra\">\n                    <span\n                      ><font-awesome-icon\n                        v-if=\"allSelectedProperty\"\n                        icon=\"check\"\n                        class=\"text-success icon-check\"\n                    /></span>\n                    <span\n                      ><font-awesome-icon\n                        v-if=\"someSelected && !allSelectedProperty\"\n                        icon=\"square\"\n                        class=\"text-success icon-check\"\n                    /></span>\n                  </template>\n                </p-check>\n                <label v-else class=\"mb-0 mt-0\">\n                  <input\n                    type=\"checkbox\"\n                    v-model=\"allSelectedProperty\"\n                    @change=\"checkAll()\"\n                  />\n                </label>\n              </template>\n            </th>\n            <template v-for=\"(headline, hIndex) in configFinal.headlines\">\n              <th\n                v-if=\"\n                  ((configFinal.columns[hIndex] &&\n                    !configFinal.columns[hIndex].breakpoint) ||\n                    hiddenBreakpoints.findIndex(\n                      (x) =>\n                        configFinal.columns[hIndex] &&\n                        x === configFinal.columns[hIndex].breakpoint\n                    ) === -1) &&\n                  !configFinal.columns[hIndex].sticky &&\n                  !configFinal.hiddenCols[hIndex] &&\n                  !emptyColumns[hIndex]\n                \"\n                :class=\"headerClass[hIndex]\"\n                :title=\"configFinal.columns[hIndex].title\"\n                :key=\"'headline-' + hIndex\"\n                @click=\"setSortColumn(hIndex)\"\n              >\n                <span\n                  class=\"\n                    headline\n                    quintable--table-container--table--header-row--th--headline\n                  \"\n                  v-html=\"headline\"\n                  v-if=\"showHeadlines[hIndex]\"\n                ></span>\n                <span\n                  class=\"\n                    headline\n                    quintable--table-container--table--header-row--th--headline\n                  \"\n                  v-else\n                  ><wbr\n                /></span>\n                <span\n                  class=\"\n                    sorting-icon\n                    ms-2\n                    quintable--table-container--table--header-row--th--sorting-icon\n                  \"\n                  v-if=\"configFinal.sorts[hIndex]\"\n                >\n                  <font-awesome-icon\n                    v-if=\"!currentSortIndexes[hIndex]\"\n                    icon=\"sort\"\n                    class=\"text-primary\"\n                  />\n                  <font-awesome-icon\n                    v-if=\"\n                      currentSortIndexes[hIndex] &&\n                      currentSortIndexes[hIndex].asc\n                    \"\n                    icon=\"sort-amount-down-alt\"\n                    class=\"text-primary\"\n                  />\n                  <font-awesome-icon\n                    v-if=\"\n                      currentSortIndexes[hIndex] &&\n                      !currentSortIndexes[hIndex].asc\n                    \"\n                    icon=\"sort-amount-down\"\n                    class=\"text-primary\"\n                  />\n                  <span\n                    v-if=\"currentSortIndexes[hIndex]\"\n                    @click.stop.prevent=\"removeSort(hIndex)\"\n                    class=\"ms-1 text-muted\"\n                  >\n                    <span\n                      class=\"badge bg-info text-white\"\n                      v-if=\"numberOfSorts > 1\"\n                    >\n                      {{ currentSortIndexes[hIndex].order + 1 }}\n                    </span>\n                    <small v-else>\n                      <font-awesome-icon icon=\"times\" />\n                    </small>\n                  </span>\n                </span>\n              </th>\n            </template>\n            <th\n              v-if=\"configFinal.select && configFinal.selectPosition === 'post'\"\n              class=\"\n                select-th\n                post\n                quintable--table-container--table--header-row--select-th\n                quintable--table-container--table--header-row--select-th--post\n              \"\n            >\n              <template v-if=\"configFinal.selectAll && !noRows\">\n                <p-check\n                  v-if=\"configFinal.prettySelect\"\n                  name=\"check\"\n                  class=\"p-icon p-smooth\"\n                  v-model=\"allSelectedProperty\"\n                  @change=\"checkAll()\"\n                >\n                  <template slot=\"extra\">\n                    <span\n                      ><font-awesome-icon\n                        v-if=\"allSelectedProperty\"\n                        icon=\"check\"\n                        class=\"text-success icon-check\"\n                    /></span>\n                    <span\n                      ><font-awesome-icon\n                        v-if=\"someSelected && !allSelectedProperty\"\n                        icon=\"square\"\n                        class=\"text-success icon-check\"\n                    /></span>\n                  </template>\n                </p-check>\n                <label v-else class=\"mb-0 mt-0\">\n                  <input\n                    type=\"checkbox\"\n                    v-model=\"allSelectedProperty\"\n                    @change=\"checkAll()\"\n                  />\n                </label>\n              </template>\n            </th>\n          </tr>\n        </thead>\n        <tbody\n          @mouseleave=\"onMouseleaveTable\"\n          class=\"quintable--table-container--table--tbody\"\n        >\n          <template v-for=\"rIndex in visibleRowIndexes\">\n            <tr\n              class=\"\n                vue-quintable-row\n                quintable--table-container--table--tbody--row\n              \"\n              v-tooltip=\"{\n                placement: 'top',\n                content: rowsFinal[rIndex].tooltip,\n                trigger: rowsFinal[rIndex].tooltip ? 'hover' : 'manual',\n                offset: 5,\n              }\"\n              :style=\"hiddenColumns[rIndex] > 0 ? 'cursor:pointer;' : ''\"\n              :ref=\"'row-highlighted-on-hover-' + rIndex\"\n              :key=\"\n                'vue-quintable-' +\n                uuid +\n                '-row-' +\n                rIndex +\n                '-' +\n                indexesUpdatedKey\n              \"\n              @click=\"onRowClick($event, rIndex)\"\n              :class=\"\n                hoveredRow === rIndex\n                  ? configFinal.hoverClass +\n                    (rowsFinal[rIndex].classes\n                      ? ' ' + rowsFinal[rIndex].classes\n                      : '')\n                  : rowsFinal[rIndex].classes\n                  ? rowsFinal[rIndex].classes\n                  : ''\n              \"\n              :id=\"'vue-quintable-' + uuid + '-row-' + rIndex\"\n              @mouseenter=\"onMouseenterRow(rIndex)\"\n            >\n              <td\n                class=\"\n                  toggle toggle-td toggle-cell\n                  quintable--table-container--table--tbody--row--toggle-td\n                \"\n                v-if=\"hasGeneratedRows && !configFinal.hideRowToggle\"\n              >\n                <span v-if=\"hiddenColumns[rIndex] > 0\">\n                  <span v-if=\"!openRows[rIndex]\"\n                    ><font-awesome-icon\n                      fixed-width\n                      :icon=\"configFinal.collapsedRowIcon\"\n                    ></font-awesome-icon\n                  ></span>\n                  <span v-else\n                    ><font-awesome-icon\n                      fixed-width\n                      :icon=\"configFinal.expandedRowIcon\"\n                    ></font-awesome-icon\n                  ></span>\n                </span>\n              </td>\n              <td\n                v-if=\"\n                  configFinal.select && configFinal.selectPosition === 'pre'\n                \"\n                class=\"\n                  select-td\n                  pre\n                  quintable--table-container--table--tbody--row--select-td\n                  quintable--table-container--table--tbody--row--select-td--pre\n                \"\n                :class=\"{ 'disabled-select': rowsFinal[rIndex].disableSelect }\"\n              >\n                <template v-if=\"!rowsFinal[rIndex].disableSelect\">\n                  <p-check\n                    v-if=\"configFinal.prettySelect\"\n                    name=\"check\"\n                    class=\"p-icon\"\n                    v-model=\"selected[rIndex]\"\n                    @change=\"checkListener($event, rIndex)\"\n                  >\n                    <template slot=\"extra\">\n                      <span\n                        ><font-awesome-icon\n                          v-if=\"selected[rIndex]\"\n                          icon=\"check\"\n                          class=\"text-success icon-check\"\n                      /></span>\n                    </template>\n                  </p-check>\n                  <label v-else class=\"mb-0 mt-0\">\n                    <input\n                      type=\"checkbox\"\n                      v-model=\"selected[rIndex]\"\n                      @change=\"checkListener($event, rIndex)\"\n                    />\n                  </label>\n                </template>\n              </td>\n\n              <template\n                v-for=\"(cell, cIndex) in rowsFinal[rIndex].cells\n                  ? rowsFinal[rIndex].cells\n                  : rowsFinal[rIndex]\"\n              >\n                <td\n                  class=\"\n                    vue-quintable-cell\n                    quintable--table-container--table--tbody--row--cell\n                  \"\n                  v-tooltip=\"{\n                    placement: 'left',\n                    content: cell.tooltip,\n                    trigger: cell.tooltip ? 'hover' : 'manual',\n                  }\"\n                  :class=\"\n                    cellClassesParsed[rIndex][cIndex] +\n                    ' ' +\n                    configFinal.columnClasses[cIndex]\n                  \"\n                  v-if=\"\n                    !configFinal.hiddenCols[cIndex] &&\n                    !emptyColumns[cIndex] &&\n                    configFinal.columns[cIndex] &&\n                    cell &&\n                    hiddenBreakpoints.findIndex(\n                      (x) => x === configFinal.columns[cIndex].breakpoint\n                    ) === -1 &&\n                    configFinal.columns[cIndex].breakpoint !== 'all' &&\n                    !configFinal.stickyCols[cIndex]\n                  \"\n                  @click=\"onCellClick(cell)\"\n                  :key=\"\n                    'vue-quintable-' + uuid + '-cell-' + rIndex + '-' + cIndex\n                  \"\n                  :id=\"\n                    'vue-quintable-' + uuid + '-cell-' + rIndex + '-' + cIndex\n                  \"\n                >\n                  <slot :cell=\"cell\" :name=\"'cell-complete'\">\n                    <slot :cell=\"cell\" :name=\"'cell-content'\">\n                      <div\n                        class=\"cell-inner\"\n                        :class=\"'quintable--table-container--table--tbody--row--cell--inner-cell--formatted-html'\"\n                        v-if=\"\n                          configFinal.columns[cIndex].cellFormatter &&\n                          cellFormatters(cIndex, cell).type === 'html'\n                        \"\n                        v-html=\"cellFormatters(cIndex, cell).value\"\n                      ></div>\n                      <div\n                        class=\"cell-inner\"\n                        :class=\"'quintable--table-container--table--tbody--row--cell--inner-cell--formatted-value'\"\n                        v-else-if=\"configFinal.columns[cIndex].cellFormatter\"\n                      >\n                        {{ cellFormatters(cIndex, cell).value }}\n                      </div>\n                      <div\n                        class=\"cell-inner\"\n                        :class=\"'quintable--table-container--table--tbody--row--cell--inner-cell--html'\"\n                        v-else-if=\"valueToString(cell.html)\"\n                        v-html=\"cell.html\"\n                      ></div>\n                      <div\n                        class=\"cell-inner\"\n                        :class=\"'quintable--table-container--table--tbody--row--cell--inner-cell--text'\"\n                        v-if=\"valueToString(cell.text)\"\n                      >\n                        {{ cell.text }}\n                      </div>\n                      <div\n                        class=\"cell-inner\"\n                        :class=\"'quintable--table-container--table--tbody--row--cell--inner-cell--component'\"\n                        v-if=\"cell.component\"\n                      >\n                        <component\n                          :is=\"cell.component.name\"\n                          v-bind=\"cell.component.props\"\n                          @action=\"handleComponentEvent\"\n                        ></component>\n                      </div>\n                    </slot>\n                  </slot>\n                </td>\n              </template>\n\n              <td\n                v-if=\"\n                  configFinal.select && configFinal.selectPosition === 'post'\n                \"\n                class=\"\n                  select-td\n                  post\n                  quintable--table-container--table--tbody--row--select-td\n                  quintable--table-container--table--tbody--row--select-td--post\n                \"\n                :class=\"{ 'disabled-select': rowsFinal[rIndex].disableSelect }\"\n              >\n                <template v-if=\"!rowsFinal[rIndex].disableSelect\">\n                  <p-check\n                    v-if=\"configFinal.prettySelect\"\n                    name=\"check\"\n                    class=\"p-icon\"\n                    v-model=\"selected[rIndex]\"\n                    @change=\"checkListener($event, rIndex)\"\n                  >\n                    <template slot=\"extra\">\n                      <span\n                        ><font-awesome-icon\n                          v-if=\"selected[rIndex]\"\n                          icon=\"check\"\n                          class=\"text-success icon-check\"\n                      /></span>\n                    </template>\n                  </p-check>\n                  <label v-else class=\"mb-0 mt-0\">\n                    <input\n                      type=\"checkbox\"\n                      v-model=\"selected[rIndex]\"\n                      @change=\"checkListener($event, rIndex)\"\n                    />\n                  </label>\n                </template>\n              </td>\n            </tr>\n            <template\n              v-if=\"\n                (generatedRows[rIndex] || stickyRows[rIndex]) &&\n                visibleRows[rIndex]\n              \"\n            >\n              <tr\n                @mouseenter=\"onMouseenterRow(rIndex)\"\n                @click=\"onRowClick($event, rIndex)\"\n                :ref=\"'generated-row-highlighted-on-hover-' + rIndex\"\n                :key=\"\n                  'generated-row-' +\n                  rIndex +\n                  '-' +\n                  rowsUpdatedKey +\n                  '-' +\n                  generatedUpdatedKey\n                \"\n                class=\"\n                  generated-row\n                  quintable--table-container--table--tbody--generated-row\n                \"\n                v-if=\"\n                  (generatedUpdatedKey &&\n                    openRows[rIndex] &&\n                    Object.keys(generatedRows[rIndex]).length) ||\n                  Object.keys(stickyRows[rIndex]).length\n                \"\n              >\n                <td :colspan=\"configFinal.number + 1\" class=\"ps-0 pe-0 pt-0\">\n                  <div\n                    :class=\"hoveredRow === rIndex ? configFinal.hoverClass : ''\"\n                  >\n                    <table\n                      class=\"\n                        mb-2\n                        generated-table\n                        quintable--table-container--table--tbody--generated-row--generated-table\n                      \"\n                    >\n                      <tbody>\n                        <tr\n                          class=\"\n                            generated-row-cell\n                            quintable--table-container--table--tbody--generated-row--generated-table--generated-row-cell\n                          \"\n                          v-for=\"(cell, cIndex) in generatedRows[rIndex]\"\n                          :key=\"\n                            'vue-quintable-' +\n                            uuid +\n                            '-generated-row-cell-' +\n                            rIndex +\n                            '-' +\n                            cIndex +\n                            '-' +\n                            generatedUpdatedKey\n                          \"\n                          :id=\"\n                            'vue-quintable-' +\n                            uuid +\n                            '-generated-row-cell-' +\n                            rIndex +\n                            '-' +\n                            cIndex\n                          \"\n                          v-show=\"openRows[rIndex]\"\n                        >\n                          <td\n                            v-if=\"\n                              !configFinal.hideRowToggle &&\n                              generatedRows[rIndex] &&\n                              Object.keys(generatedRows[rIndex]).length\n                            \"\n                            class=\"toggle-cell invisible\"\n                          >\n                            <span v-if=\"hiddenColumns[rIndex] > 0\">\n                              <span v-if=\"!openRows[rIndex]\"\n                                ><font-awesome-icon\n                                  fixed-width\n                                  :icon=\"configFinal.collapsedRowIcon\"\n                                ></font-awesome-icon\n                              ></span>\n                              <span v-else\n                                ><font-awesome-icon\n                                  fixed-width\n                                  :icon=\"configFinal.expandedRowIcon\"\n                                ></font-awesome-icon\n                              ></span>\n                            </span>\n                          </td>\n                          <td\n                            class=\"\n                              generated-cell-element generated-cell-headline\n                              quintable--table-container--table--tbody--generated-row--generated-table--generated-row-cell--generated-cell-headline\n                            \"\n                            @click=\"setSortColumn(cIndex)\"\n                            :class=\"configFinal.columnClasses[cIndex]\"\n                            v-if=\"\n                              showHeadlines[cIndex] || configFinal.sorts[cIndex]\n                            \"\n                          >\n                            <strong\n                              v-html=\"configFinal.headlines[cIndex]\"\n                              v-if=\"showHeadlines[cIndex]\"\n                            >\n                            </strong>\n                            <span v-else class=\"headline\"><wbr /></span>\n\n                            <span\n                              class=\"\n                                sorting-icon\n                                ms-2\n                                cursor-pointer\n                                quintable--table-container--table--tbody--generated-row--generated-table--generated-row-cell--sorting-icon\n                              \"\n                              v-if=\"\n                                configFinal.sorts[cIndex] &&\n                                hoveredRow === rIndex\n                              \"\n                            >\n                              <font-awesome-icon\n                                v-if=\"!currentSortIndexes[cIndex]\"\n                                icon=\"sort\"\n                                class=\"text-primary\"\n                              />\n                              <font-awesome-icon\n                                v-if=\"\n                                  currentSortIndexes[cIndex] &&\n                                  currentSortIndexes[cIndex].asc\n                                \"\n                                icon=\"sort-amount-down-alt\"\n                                class=\"text-primary\"\n                              />\n                              <font-awesome-icon\n                                v-if=\"\n                                  currentSortIndexes[cIndex] &&\n                                  !currentSortIndexes[cIndex].asc\n                                \"\n                                icon=\"sort-amount-down\"\n                                class=\"text-primary\"\n                              />\n                              <span\n                                v-if=\"currentSortIndexes[cIndex]\"\n                                @click.stop.prevent=\"removeSort(cIndex)\"\n                                class=\"ms-1 text-muted\"\n                              >\n                                <span\n                                  class=\"badge bg-info text-white\"\n                                  v-if=\"numberOfSorts > 1\"\n                                >\n                                  {{ currentSortIndexes[cIndex].order + 1 }}\n                                </span>\n                                <small v-else>\n                                  <font-awesome-icon icon=\"times\" />\n                                </small>\n                              </span>\n                            </span>\n                          </td>\n                          <td\n                            :colspan=\"\n                              !showHeadlines[cIndex] &&\n                              !configFinal.sorts[cIndex]\n                                ? 2\n                                : 1\n                            \"\n                            :class=\"\n                              configFinal.columnClasses[cIndex] +\n                              ' ' +\n                              cellClassesParsed[rIndex][cIndex]\n                            \"\n                            class=\"\n                              generated-cell-element\n                              generated-cell-element-content\n                              generated-cell-content\n                              quintable--table-container--table--tbody--generated-row--generated-table--generated-row-cell--generated-cell-content\n                            \"\n                            @click=\"onCellClick(cell)\"\n                            v-tooltip=\"{\n                              placement: 'top',\n                              content: cell.tooltip,\n                              trigger: cell.tooltip ? 'hover' : 'manual',\n                            }\"\n                          >\n                            <slot\n                              :cell=\"cell\"\n                              :name=\"'generated-cell-complete'\"\n                            >\n                              <slot\n                                :cell=\"cell\"\n                                :name=\"'generated-cell-content'\"\n                              >\n                                <div\n                                  class=\"cell-inner\"\n                                  :class=\"'quintable--table-container--table--tbody--generated-row--generated-table--generated-row-cell--generated-cell--cell-inner--formatted-html'\"\n                                  v-if=\"\n                                    configFinal.columns[cIndex].cellFormatter &&\n                                    cellFormatters(cIndex, cell).type === 'html'\n                                  \"\n                                  v-html=\"cellFormatters(cIndex, cell).value\"\n                                ></div>\n                                <div\n                                  class=\"cell-inner\"\n                                  :class=\"'quintable--table-container--table--tbody--generated-row--generated-table--generated-row-cell--generated-cell--cell-inner--formatted-value'\"\n                                  v-else-if=\"\n                                    configFinal.columns[cIndex].cellFormatter\n                                  \"\n                                >\n                                  {{ cellFormatters(cIndex, cell).value }}\n                                </div>\n                                <div\n                                  class=\"cell-inner\"\n                                  :class=\"'quintable--table-container--table--tbody--generated-row--generated-table--generated-row-cell--generated-cell--cell-inner--html'\"\n                                  v-else-if=\"valueToString(cell.html)\"\n                                  v-html=\"cell.html\"\n                                ></div>\n                                <div\n                                  class=\"cell-inner\"\n                                  :class=\"'quintable--table-container--table--tbody--generated-row--generated-table--generated-row-cell--generated-cell--cell-inner--text'\"\n                                  v-if=\"valueToString(cell.text)\"\n                                >\n                                  {{ cell.text }}\n                                </div>\n                                <div\n                                  class=\"cell-inner\"\n                                  :class=\"'quintable--table-container--table--tbody--generated-row--generated-table--generated-row-cell--generated-cell--cell-inner--component'\"\n                                  v-if=\"cell.component\"\n                                >\n                                  <component\n                                    :is=\"cell.component.name\"\n                                    v-bind=\"cell.component.props\"\n                                    @action=\"handleComponentEvent\"\n                                  ></component>\n                                </div>\n                              </slot>\n                            </slot>\n                          </td>\n                        </tr>\n                        <tr\n                          v-for=\"(cell, cIndex) in stickyRows[rIndex]\"\n                          class=\"\n                            sticky-row-cell\n                            quintable--table-container--table--tbody--generated-row--generated-table--sticky-row-cell\n                          \"\n                          :key=\"\n                            'vue-quintable-' +\n                            uuid +\n                            '-sticky-row-cell-' +\n                            rIndex +\n                            '-' +\n                            cIndex\n                          \"\n                          :id=\"\n                            'vue-quintable-' +\n                            uuid +\n                            '-sticky-row-cell-' +\n                            rIndex +\n                            '-' +\n                            cIndex\n                          \"\n                        >\n                          <td\n                            v-if=\"\n                              !configFinal.hideRowToggle &&\n                              generatedRows[rIndex] &&\n                              Object.keys(generatedRows[rIndex]).length\n                            \"\n                            class=\"toggle-cell invisible\"\n                          >\n                            <span v-if=\"hiddenColumns[rIndex] > 0\">\n                              <span v-if=\"!openRows[rIndex]\"\n                                ><font-awesome-icon\n                                  fixed-width\n                                  :icon=\"configFinal.collapsedRowIcon\"\n                                ></font-awesome-icon\n                              ></span>\n                              <span v-else\n                                ><font-awesome-icon\n                                  fixed-width\n                                  :icon=\"configFinal.expandedRowIcon\"\n                                ></font-awesome-icon\n                              ></span>\n                            </span>\n                          </td>\n                          <td\n                            class=\"\n                              generated-cell-element\n                              sticky-cell-headline\n                              quintable--table-container--table--tbody--generated-row--generated-table--generated-row-cell--sticky-cell-headline\n                            \"\n                            @click=\"setSortColumn(cIndex)\"\n                            :class=\"configFinal.columnClasses[cIndex]\"\n                            v-if=\"\n                              showHeadlines[cIndex] || configFinal.sorts[cIndex]\n                            \"\n                          >\n                            <strong\n                              v-html=\"configFinal.headlines[cIndex]\"\n                              v-if=\"showHeadlines[cIndex]\"\n                            >\n                            </strong>\n                            <span v-else class=\"headline\"><wbr /></span>\n\n                            <span\n                              class=\"\n                                sorting-icon\n                                ms-2\n                                cursor-pointer\n                                quintable--table-container--table--tbody--generated-row--generated-table--generated-row-cell--sorting-icon\n                              \"\n                              v-if=\"\n                                configFinal.sorts[cIndex] &&\n                                hoveredRow === rIndex\n                              \"\n                            >\n                              <font-awesome-icon\n                                v-if=\"!currentSortIndexes[cIndex]\"\n                                icon=\"sort\"\n                                class=\"text-primary\"\n                              />\n                              <font-awesome-icon\n                                v-if=\"\n                                  currentSortIndexes[cIndex] &&\n                                  currentSortIndexes[cIndex].asc\n                                \"\n                                icon=\"sort-amount-down-alt\"\n                                class=\"text-primary\"\n                              />\n                              <font-awesome-icon\n                                v-if=\"\n                                  currentSortIndexes[cIndex] &&\n                                  !currentSortIndexes[cIndex].asc\n                                \"\n                                icon=\"sort-amount-down\"\n                                class=\"text-primary\"\n                              />\n                              <span\n                                v-if=\"currentSortIndexes[cIndex]\"\n                                @click.stop.prevent=\"removeSort(cIndex)\"\n                                class=\"ms-1 text-muted\"\n                              >\n                                <span\n                                  class=\"badge bg-info text-white\"\n                                  v-if=\"numberOfSorts > 1\"\n                                >\n                                  {{ currentSortIndexes[cIndex].order + 1 }}\n                                </span>\n                                <small v-else>\n                                  <font-awesome-icon icon=\"times\" />\n                                </small>\n                              </span>\n                            </span>\n                          </td>\n\n                          <td\n                            :colspan=\"\n                              !showHeadlines[cIndex] &&\n                              !configFinal.sorts[cIndex]\n                                ? 2\n                                : 1\n                            \"\n                            :class=\"\n                              configFinal.columnClasses[cIndex] +\n                              ' ' +\n                              cellClassesParsed[rIndex][cIndex]\n                            \"\n                            class=\"\n                              generated-cell-element\n                              generated-cell-element-content\n                              sticky-cell-content\n                              quintable--table-container--table--tbody--generated-row--generated-table--generated-row-cell--sticky-cell-content\n                            \"\n                            @click=\"onCellClick(cell)\"\n                            v-tooltip=\"{\n                              placement: 'top',\n                              content: cell.tooltip,\n                              trigger: cell.tooltip ? 'hover' : 'manual',\n                            }\"\n                          >\n                            <slot :cell=\"cell\" :name=\"'sticky-cell-complete'\">\n                              <slot :cell=\"cell\" :name=\"'sticky-cell-content'\">\n                                <div\n                                  class=\"cell-inner\"\n                                  :class=\"'quintable--table-container--table--tbody--generated-row--generated-table--sticky-row-cell--sticky-cell--cell-inner--formatted-html'\"\n                                  v-if=\"\n                                    configFinal.columns[cIndex].cellFormatter &&\n                                    cellFormatters(cIndex, cell).type === 'html'\n                                  \"\n                                  v-html=\"cellFormatters(cIndex, cell).value\"\n                                ></div>\n                                <div\n                                  class=\"cell-inner\"\n                                  :class=\"'quintable--table-container--table--tbody--generated-row--generated-table--sticky-row-cell--sticky-cell--cell-inner--formatted-value'\"\n                                  v-else-if=\"\n                                    configFinal.columns[cIndex].cellFormatter\n                                  \"\n                                >\n                                  {{ cellFormatters(cIndex, cell).value }}\n                                </div>\n                                <div\n                                  class=\"cell-inner\"\n                                  :class=\"'quintable--table-container--table--tbody--generated-row--generated-table--sticky-row-cell--sticky-cell--cell-inner--html'\"\n                                  v-else-if=\"valueToString(cell.html)\"\n                                  v-html=\"cell.html\"\n                                ></div>\n                                <div\n                                  class=\"cell-inner\"\n                                  :class=\"'quintable--table-container--table--tbody--generated-row--generated-table--sticky-row-cell--sticky-cell--cell-inner--text'\"\n                                  v-if=\"valueToString(cell.text)\"\n                                >\n                                  {{ cell.text }}\n                                </div>\n                                <div\n                                  class=\"cell-inner\"\n                                  :class=\"'quintable--table-container--table--tbody--generated-row--generated-table--sticky-row-cell--sticky-cell--cell-inner--component'\"\n                                  v-if=\"cell.component\"\n                                >\n                                  <component\n                                    :is=\"cell.component.name\"\n                                    v-bind=\"cell.component.props\"\n                                    @action=\"handleComponentEvent\"\n                                  ></component>\n                                </div>\n                              </slot>\n                            </slot>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </td>\n              </tr>\n            </template>\n          </template>\n        </tbody>\n      </table>\n\n      <template v-if=\"noRows && !ajaxLoading\">\n        <div\n          class=\"\n            clearfix\n            slot-no-results slot\n            quintable--table-container--no-results\n          \"\n        >\n          <slot name=\"no-results\">\n            <div\n              class=\"\n                text-center\n                p-3\n                quintable--table-container--no-results--results\n              \"\n            >\n              <em v-html=\"configFinal.emptyPlaceholder\"></em>\n            </div>\n          </slot>\n          <hr />\n        </div>\n      </template>\n    </div>\n\n    <div v-if=\"ajaxLoading\" class=\"slot-loading slot quintable--loading\">\n      <slot name=\"loading\">\n        <div\n          class=\"loader-wrapper quintable--loading--loader-wrapper\"\n          :style=\"'height:' + loaderHeight + 'px;'\"\n        >\n          <div\n            class=\"\n              loader\n              text-center\n              py-4\n              quintable--loading--loader-wrapper--loader\n            \"\n          >\n            <font-awesome-icon\n              icon=\"circle-notch\"\n              spin\n              class=\"\n                ajax-loader\n                quintable--loading--loader-wrapper--loader--ajax-loader\n              \"\n            />\n          </div>\n        </div>\n      </slot>\n    </div>\n\n    <div class=\"clearfix quintable--table-footer-container\">\n      <div class=\"row\">\n        <div class=\"col-lg-4 quintable--table-footer-container--sort-container\">\n          <div\n            class=\"\n              pb-lg-0 pb-3\n              float-start\n              quintable--table-footer-container--sort-container--sort-select\n            \"\n            v-if=\"configFinal.multiSortSelect || configFinal.pageSortSelect\"\n          >\n            <span\n              :class=\"configFinal.pageSort ? 'me-3' : ''\"\n              v-if=\"configFinal.multiSortSelect\"\n              ><p-check\n                class=\"\n                  p-switch\n                  quintable--table-footer-container--sort-container--sort-select--multi-sort-select\n                \"\n                v-model=\"multiSort\"\n                value=\"true\"\n                >{{ configFinal.multiSortPlaceholder }}</p-check\n              ></span\n            >\n            <p-check\n              v-if=\"configFinal.pageSortSelect\"\n              class=\"\n                p-switch\n                quintable--table-footer-container--sort-container--sort-select--page-sort-select\n              \"\n              v-model=\"pageSort\"\n              value=\"true\"\n              >{{ configFinal.pageSortPlaceholder }}</p-check\n            >\n          </div>\n        </div>\n        <div\n          class=\"col-lg-8 quintable--table-footer-container--pagination-wrapper\"\n        >\n          <div\n            class=\"\n              float-lg-end\n              me-3\n              pagination-container\n              quintable--table-footer-container--pagination-wrapper--pagination-container\n            \"\n            v-if=\"configFinal && configFinal.pagination\"\n          >\n            <div\n              v-if=\"configFinal.rowsSelect\"\n              class=\"\n                mb-2\n                d-inline-block\n                me-3\n                align-middle\n                quintable--table-footer-container--pagination-wrapper--pagination-container--rows-select\n              \"\n            >\n              <span\n                class=\"\n                  d-inline-block\n                  align-middle\n                  me-2\n                  quintable--table-footer-container--pagination-wrapper--pagination-container--rows-select--placeholder\n                \"\n                v-html=\"configFinal.rowsPlaceholder\"\n              ></span>\n              <v-select\n                class=\"\n                  d-inline-block\n                  align-middle\n                  quintable--table-footer-container--pagination-wrapper--pagination-container--rows-select--select\n                \"\n                :options=\"paginationOptionsFilled\"\n                v-model=\"currentRowsPerPageProperty\"\n                :clearable=\"false\"\n              />\n            </div>\n            <nav\n              v-if=\"configFinal && configFinal.pagination && pages > 1\"\n              class=\"\n                d-inline-block\n                align-middle\n                mb-2\n                quintable--table-footer-container--pagination-wrapper--pagination-container--nav\n              \"\n              :class=\"{ 'me-3': numberOfVisibleRows, disabled: ajaxLoading }\"\n            >\n              <ul\n                class=\"\n                  pagination\n                  mb-0\n                  quintable--table-footer-container--pagination-wrapper--pagination-container--nav--pagination\n                \"\n              >\n                <li\n                  class=\"page-item\"\n                  v-if=\"pages > pageRange\"\n                  :class=\"{ disabled: currentPage <= 1 }\"\n                  @click=\"gotoPage('first')\"\n                >\n                  <span class=\"page-link\">\n                    <font-awesome-icon icon=\"angle-double-left\" />\n                  </span>\n                </li>\n                <li\n                  class=\"page-item\"\n                  :class=\"{ disabled: currentPage <= 1 }\"\n                  @click=\"gotoPage('prev')\"\n                >\n                  <span class=\"page-link\">\n                    <font-awesome-icon icon=\"angle-left\" />\n                  </span>\n                </li>\n                <li\n                  class=\"page-item\"\n                  v-if=\"pageRange < pages && visiblePages[0] > 1\"\n                  @click=\"updatePageOffset(-1)\"\n                >\n                  <span class=\"page-link\"> ... </span>\n                </li>\n\n                <li\n                  :key=\"'pagination-item-' + page\"\n                  class=\"page-item\"\n                  :class=\"{ active: page === currentPage }\"\n                  v-for=\"page in visiblePages\"\n                  @click=\"gotoPage(page)\"\n                >\n                  <span class=\"page-link\">\n                    {{ page }}\n                  </span>\n                </li>\n\n                <li\n                  class=\"page-item\"\n                  v-if=\"\n                    pageRange < pages &&\n                    visiblePages[visiblePages.length - 1] < pages\n                  \"\n                  @click=\"updatePageOffset(1)\"\n                >\n                  <span class=\"page-link\"> ... </span>\n                </li>\n\n                <li\n                  class=\"page-item\"\n                  :class=\"{ disabled: pages === currentPage }\"\n                  @click=\"gotoPage('next')\"\n                >\n                  <span class=\"page-link\">\n                    <font-awesome-icon icon=\"angle-right\" />\n                  </span>\n                </li>\n                <li\n                  class=\"page-item\"\n                  v-if=\"pages > pageRange\"\n                  :class=\"{ disabled: pages === currentPage }\"\n                  @click=\"gotoPage('last')\"\n                >\n                  <span class=\"page-link\">\n                    <font-awesome-icon icon=\"angle-double-right\" />\n                  </span>\n                </li>\n              </ul>\n            </nav>\n\n            <span\n              class=\"\n                d-inline-block\n                align-middle\n                mb-2\n                quintable--table-footer-container--pagination-wrapper--pagination-container--visible-rows\n              \"\n              v-if=\"numberOfVisibleRows\"\n              >{{ firstVisibleRow }}-{{ lastVisibleRow }}\n              {{ configFinal.numberOfVisibleRowsFillerWord }}\n              {{ numberOfVisibleRows }}</span\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"footer slot slot-footer quintable--footer\">\n      <slot name=\"footer\"></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport fuzzy from \"fuzzy.js\";\nimport axios from \"axios\";\nimport randomUUID from \"uuid/v4\";\n\nexport default {\n  name: \"VueQuintable\",\n  props: {\n    rows: {\n      type: Array,\n      default() {\n        return [];\n      },\n    },\n    config: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n\n    dynamicConfig: {\n      type: Boolean,\n      default: false,\n    },\n\n    value: {\n      type: Array,\n      default() {\n        return [];\n      },\n    },\n    selectedRows: {\n      type: Array,\n      default() {\n        return [];\n      },\n    },\n    preSelectedRows: {\n      type: Array,\n      default() {\n        return [];\n      },\n    },\n    loading: {\n      type: Boolean,\n      default: false,\n    },\n    filters: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n    filterGroups: {\n      type: Array,\n      default() {\n        return [];\n      },\n    },\n    verbose: {\n      type: Boolean,\n      default: false,\n    },\n    nested: {\n      type: Boolean,\n      default: false,\n    },\n    tableClasses: {\n      type: String,\n      default: \"\",\n    },\n    sortOrder: {\n      type: Array,\n      default() {\n        return [];\n      },\n    },\n    updated: {\n      type: [Boolean, Object, Date],\n      default: false,\n    },\n    axios: {\n      type: Function,\n    },\n    identifier: {\n      type: String,\n      default: null,\n    },\n    initialSearchTerm: {\n      type: String,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      rowsUpdatedKey: Date.now(),\n      indexesUpdatedKey: Date.now(),\n      generatedUpdatedKey: Date.now(),\n      hoveredRow: null,\n      allSelectedCustom: null,\n      selected: {},\n      openRows: {},\n      sortedIndexes: {},\n      currentSortIndexes: {},\n      query: \"\",\n      currentPage: 1,\n      paginationOptions: [\n        1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 20, 25, 30, 50, 100,\n      ],\n      fetching: false,\n      ajaxRows: [],\n      ajaxPages: 0,\n      ajaxAll: 0,\n      customRowsPerPage: null,\n      customMultiSort: null,\n      customPageSort: null,\n      hiddenBreakpoints: [],\n      initBreakpoints: true,\n      breakpointTimeout: null,\n      cancelSource: null,\n      lastQuery: \"\",\n      pageOffset: 0,\n      uuid: randomUUID(),\n      loaderHeight: 0,\n      defaultOperator: \"equal\",\n      queryAjaxTimeout: null,\n      lastSearchQueryUpdated: null,\n      operatorFunctions: {\n        equal: (a, b) => {\n          return b === a;\n        },\n        greater: (a, b) => {\n          return b > a;\n        },\n        less: (a, b) => {\n          return b < a;\n        },\n        greaterEqual: (a, b) => {\n          return b >= a;\n        },\n        lessEqual: (a, b) => {\n          return b <= a;\n        },\n        contains: (a, b) => {\n          if (!Array.isArray(b) && typeof b !== \"string\") {\n            return false;\n          }\n\n          return b.indexOf(a) !== -1;\n        },\n\n        notContains: (a, b) => {\n          if (!Array.isArray(b) && typeof b !== \"string\") {\n            return false;\n          }\n\n          return b.indexOf(a) === -1;\n        },\n\n        startsWith: (a, b) => {\n          if (typeof b !== \"string\") {\n            return false;\n          }\n\n          return b.indexOf(a) === 0;\n        },\n\n        endsWitch: (a, b) => {\n          if (typeof b !== \"string\") {\n            return false;\n          }\n\n          return b.indexOf(a, this.length - a.length) !== -1;\n        },\n\n        matches(regex, b) {\n          if (!(regex instanceof RegExp) || typeof b !== \"string\") {\n            return false;\n          }\n          return regex.test(b);\n        },\n      },\n      storedState: {},\n    };\n  },\n\n  computed: {\n    /**\n     * Just a debug flag\n     *\n     */\n    DEBUG() {\n      return this.verbose;\n    },\n\n    /**\n     * Checks if an axios instance has been passed to quintable or the default axios has to be used\n     *\n     */\n    axiosFinal() {\n      return this.axios ? this.axios : axios;\n    },\n\n    /**\n     * Set default values for all possible config values\n     *\n     */\n    configFinal() {\n      if (!this.config) {\n        return {};\n      }\n\n      let pagination = false;\n      if (this.config.pagination === true) {\n        pagination = 25;\n      } else if (this.config.pagination) {\n        let i = 0;\n        while (\n          this.paginationOptions[i] <= this.config.pagination &&\n          i < this.paginationOptions.length\n        ) {\n          i++;\n        }\n        pagination =\n          this.paginationOptions[\n            Math.min(i - 1, this.paginationOptions.length - 1)\n          ];\n      }\n\n      let numberOfVisibleRowsFillerWord = \"of\";\n\n      if (this.config.numberOfVisibleRowsFillerWord) {\n        numberOfVisibleRowsFillerWord =\n          this.config.numberOfVisibleRowsFillerWord;\n      }\n\n      let select = false;\n      if (this.config.select) {\n        select = true;\n      }\n\n      let ajaxRequestDelay = 250;\n      if (this.config.ajaxRequestDelay) {\n        ajaxRequestDelay = this.config.ajaxRequestDelay;\n      }\n\n      let hoverClass = \"bg-muted\";\n      if (this.config.hoverClass === false) {\n        hoverClass = \"\";\n      } else if (this.config.hoverClass && this.config.hoverClass !== true) {\n        hoverClass = this.config.hoverClass;\n      }\n\n      let multiSort = false;\n      if (this.config.multiSort) {\n        multiSort = true;\n      }\n\n      let pageSort = false;\n      if (this.config.pageSort) {\n        pageSort = true;\n      }\n\n      let multiSortSelect = false;\n      if (this.config.multiSortSelect) {\n        multiSortSelect = true;\n      }\n\n      let pageSortSelect = false;\n      if (this.config.pageSortSelect) {\n        pageSortSelect = true;\n      }\n\n      let ajaxUrl = false;\n      if (this.config.ajaxUrl) {\n        ajaxUrl = this.config.ajaxUrl;\n      }\n\n      let selectPosition = \"post\";\n      if ([\"pre\", \"post\"].includes(this.config.selectPosition)) {\n        selectPosition = this.config.selectPosition;\n      }\n\n      let expandedAll = false;\n      if (this.config.expandedAll) {\n        expandedAll = true;\n      }\n\n      let useFuzzySearch = false;\n      if (this.config.useFuzzySearch) {\n        useFuzzySearch = true;\n      }\n      let prettySelect = false;\n      if (this.config.prettySelect) {\n        prettySelect = true;\n      }\n\n      let rowsSelect = false;\n      if (this.config.rowsSelect) {\n        rowsSelect = true;\n      }\n\n      let disallowAllOption = false;\n      if (this.config.disallowAllOption) {\n        disallowAllOption = true;\n      }\n\n      let hideEmptyColumns = false;\n      if (this.config.hideEmptyColumns) {\n        hideEmptyColumns = true;\n      }\n\n      let ignoreSortEmptyColumns = \"none\";\n      if (\n        [\"none\", \"active\", \"all\"].includes(this.config.ignoreSortEmptyColumns)\n      ) {\n        ignoreSortEmptyColumns = this.config.ignoreSortEmptyColumns;\n      }\n\n      let search = false;\n      if (this.config.search) {\n        search = true;\n      }\n\n      let searchLength = 1;\n      if (this.config.searchLength) {\n        searchLength = this.config.searchLength;\n      }\n\n      let searchPlaceholder = \"Search...\";\n      if (this.config.searchPlaceholder) {\n        searchPlaceholder = this.config.searchPlaceholder;\n      }\n\n      let multiSortPlaceholder = \"Multiple sort\";\n      if (this.config.multiSortPlaceholder) {\n        multiSortPlaceholder = this.config.multiSortPlaceholder;\n      }\n\n      let pageSortPlaceholder = \"Page sort\";\n      if (this.config.pageSortPlaceholder) {\n        pageSortPlaceholder = this.config.pageSortPlaceholder;\n      }\n\n      let filterRelation = \"AND\";\n      if ([\"AND\", \"OR\"].includes(this.config.filterRelation)) {\n        filterRelation = this.config.filterRelation;\n      }\n\n      let filterGroupRelation = \"AND\";\n      if ([\"AND\", \"OR\"].includes(this.config.filterGroupRelation)) {\n        filterGroupRelation = this.config.filterGroupRelation;\n      }\n\n      let rowsPlaceholder = \"Rows per page:\";\n      if (this.config.rowsPlaceholder) {\n        rowsPlaceholder = this.config.rowsPlaceholder;\n      }\n\n      let emptyPlaceholder = \"No rows...\";\n      if (this.config.emptyPlaceholder) {\n        emptyPlaceholder = this.config.emptyPlaceholder;\n      }\n\n      let selectAll = false;\n      if (this.config.selectAll) {\n        selectAll = true;\n      }\n\n      let selectAllRows = false;\n      if (this.config.selectAllRows) {\n        selectAllRows = true;\n      }\n\n      if (ajaxUrl && selectAllRows) {\n        console.warn(\n          \"Option selectAllRows was deactivated automatically because ajaxUrl is set!\"\n        );\n        selectAllRows = false;\n      }\n\n      let storeState = false;\n      if (this.config.storeState) {\n        storeState = true;\n      }\n\n      if (!this.identifier && this.config.storeState) {\n        console.warn(\n          \"Option storeState was deactivated automatically because table identifier is not set!\"\n        );\n        storeState = false;\n      }\n\n      const testLocalStorage = \"test-local-storage\";\n      try {\n        localStorage.setItem(testLocalStorage, testLocalStorage);\n        localStorage.removeItem(testLocalStorage);\n      } catch (e) {\n        console.warn(\n          \"Option storeState was deactivated automatically because local storage is not available!\"\n        );\n        storeState = false;\n      }\n\n      let defaultSelected = false;\n      if (this.config.defaultSelected) {\n        defaultSelected = true;\n      }\n\n      let hideRowToggle = false;\n      if (this.config.hideRowToggle) {\n        hideRowToggle = true;\n      }\n\n      let expandedRowIcon = \"chevron-up\";\n      if (\n        this.config.expandedRowIcon &&\n        typeof this.config.expandedRowIcon === \"string\" &&\n        [\"chevron-up\", \"minus\", \"caret-up\", \"eye-slash\"].includes(\n          this.config.expandedRowIcon.toLowerCase()\n        )\n      ) {\n        expandedRowIcon = this.config.expandedRowIcon.toLowerCase();\n      }\n\n      let collapsedRowIcon = \"chevron-down\";\n      if (\n        this.config.collapsedRowIcon &&\n        typeof this.config.collapsedRowIcon === \"string\" &&\n        [\"chevron-down\", \"plus\", \"caret-down\", \"eye\"].includes(\n          this.config.collapsedRowIcon.toLowerCase()\n        )\n      ) {\n        collapsedRowIcon = this.config.collapsedRowIcon.toLowerCase();\n      }\n\n      let pageRange = 5;\n      if (this.config.pageRange) {\n        pageRange = this.config.pageRange;\n      }\n\n      let searchClass = \"col-12\";\n      if (this.config.searchClass) {\n        searchClass = this.config.searchClass;\n      }\n\n      let searchContainerClass = \"row\";\n      if (this.config.searchContainerClass) {\n        searchContainerClass = this.config.searchContainerClass;\n      }\n\n      let requestMethod = \"GET\";\n      if (\n        this.config.requestMethod &&\n        typeof this.config.requestMethod === \"string\" &&\n        [\"POST\", \"GET\"].includes(this.config.requestMethod.toUpperCase())\n      ) {\n        requestMethod = this.config.requestMethod.toUpperCase();\n      }\n\n      let number = 0;\n      let headlines = [];\n      let breakpoints = [];\n      let hiddenCols = [];\n      let sorts = [];\n      let stickyCols = [];\n      let alignments = [];\n      let columnClasses = [];\n      let ignoreEmpty = [];\n\n      let columns = null;\n      if (this.config.columns) {\n        number = this.config.columns.length;\n\n        for (let i = 0; i < this.config.columns.length; i++) {\n          columnClasses[i] = \"\";\n          if (this.config.columns[i] && this.config.columns[i].headline) {\n            headlines[i] = this.config.columns[i].headline;\n            columnClasses[i] += this.config.columns[i].headline\n              .replace(/([a-z])([A-Z])/g, \"$1-$2\")\n              .replace(/\\s+/g, \"-\")\n              .toLowerCase();\n          } else {\n            headlines[i] = \"\";\n          }\n\n          columnClasses[i] += \" column-\" + (i + 1);\n\n          if (this.config.columns[i].classes) {\n            columnClasses[i] += \" \" + this.config.columns[i].classes;\n          }\n\n          if (this.config.columns[i] && this.config.columns[i].breakpoint) {\n            breakpoints[i] = this.config.columns[i].breakpoint;\n          } else {\n            breakpoints[i] = \"\";\n          }\n\n          if (this.config.columns[i] && this.config.columns[i].sort) {\n            if (\n              this.config.columns[i].firstSortDirection &&\n              typeof this.config.columns[i].firstSortDirection === \"string\" &&\n              [\"DESC\", \"ASC\"].includes(\n                this.config.columns[i].firstSortDirection.toUpperCase()\n              )\n            ) {\n              sorts[i] =\n                this.config.columns[i].firstSortDirection.toUpperCase();\n            } else {\n              sorts[i] = true;\n            }\n          } else {\n            sorts[i] = false;\n          }\n\n          if (this.config.columns[i] && this.config.columns[i].ignoreEmpty) {\n            ignoreEmpty[i] = true;\n          } else {\n            ignoreEmpty[i] = false;\n          }\n\n          if (this.config.columns[i] && this.config.columns[i].sticky) {\n            stickyCols[i] = true;\n          } else {\n            stickyCols[i] = false;\n          }\n\n          if (this.config.columns[i] && this.config.columns[i].hidden) {\n            hiddenCols[i] = true;\n          } else {\n            hiddenCols[i] = false;\n          }\n\n          if (this.config.columns[i] && this.config.columns[i].align) {\n            alignments[i] = this.config.columns[i].align;\n          } else {\n            alignments[i] = false;\n          }\n        }\n\n        columns = this.config.columns;\n      }\n\n      return {\n        headlines: headlines,\n        columnClasses: columnClasses,\n        sorts: sorts,\n        pageSort: pageSort,\n        multiSort: multiSort,\n        pageSortSelect: pageSortSelect,\n        multiSortSelect: multiSortSelect,\n        filterGroupRelation: filterGroupRelation,\n        filterRelation: filterRelation,\n        rowsSelect: rowsSelect,\n        disallowAllOption: disallowAllOption,\n        defaultSelected: defaultSelected,\n        searchLength: searchLength,\n        search: search,\n        searchPlaceholder: searchPlaceholder,\n        useFuzzySearch: useFuzzySearch,\n        ajaxUrl: ajaxUrl,\n        pageSortPlaceholder: pageSortPlaceholder,\n        multiSortPlaceholder: multiSortPlaceholder,\n        rowsPlaceholder: rowsPlaceholder,\n        emptyPlaceholder: emptyPlaceholder,\n        stickyCols: stickyCols,\n        alignments: alignments,\n        breakpoints: breakpoints,\n        hiddenCols: hiddenCols,\n        ignoreEmpty: ignoreEmpty,\n        hideEmptyColumns: hideEmptyColumns,\n        ignoreSortEmptyColumns: ignoreSortEmptyColumns,\n        pagination: pagination,\n        numberOfVisibleRowsFillerWord: numberOfVisibleRowsFillerWord,\n        select: select,\n        selectAll: selectAll,\n        selectAllRows: selectAllRows,\n        hoverClass: hoverClass,\n        expandedAll: expandedAll,\n        pageRange: pageRange,\n        prettySelect: prettySelect,\n        number: number,\n        columns: columns,\n        hideRowToggle: hideRowToggle,\n        expandedRowIcon: expandedRowIcon,\n        collapsedRowIcon: collapsedRowIcon,\n        selectPosition: selectPosition,\n        searchClass: searchClass,\n        searchContainerClass: searchContainerClass,\n        requestMethod: requestMethod,\n        storeState: storeState,\n        ajaxRequestDelay: ajaxRequestDelay,\n      };\n    },\n\n    /**\n     * Checks which rows shall be shown\n     *\n     * @returns {Array} a boolean array which represents all indexes of the rows\n     */\n    visibleRows() {\n      //just for updating the computed property\n      if (\n        !!this.rowsUpdatedKey &&\n        !this.configFinal.ajaxUrl &&\n        this.currentRowsPerPage !== \"All\"\n      ) {\n        let visible = [];\n\n        for (let i = 0; i < this.rowsFinal.length; i++) {\n          visible.push(false);\n        }\n\n        let onlyVisibleSortedRows = {};\n\n        for (let index in this.sortedIndexes) {\n          if (Object.prototype.hasOwnProperty.call(this.sortedIndexes, index)) {\n            if (this.filteredRows[this.sortedIndexes[index]]) {\n              onlyVisibleSortedRows[index] = this.sortedIndexes[index];\n            }\n          }\n        }\n\n        let borderHigh = this.currentPage * this.currentRowsPerPage;\n        let borderLow = borderHigh - this.currentRowsPerPage;\n\n        let counter = 0;\n        for (let index in onlyVisibleSortedRows) {\n          if (\n            Object.prototype.hasOwnProperty.call(onlyVisibleSortedRows, index)\n          ) {\n            index = parseInt(index);\n            if (counter < borderHigh && counter >= borderLow) {\n              visible[onlyVisibleSortedRows[index]] = true;\n            }\n            counter++;\n          }\n        }\n\n        return visible;\n      } else {\n        return this.filteredRows;\n      }\n    },\n\n    /**\n     * Checks which indexes belongs to the current visible rows\n     *\n     * @returns {Array} an array of all visible indexes\n     */\n    visibleRowIndexes() {\n      let rows = [];\n      //just for updating the computed property\n      if (this.indexesUpdatedKey) {\n        if (this.configFinal.ajaxUrl && !this.pageSort) {\n          for (let i = 0; i < this.rowsFinal.length; i++) {\n            rows.push(i);\n          }\n        } else {\n          for (let i in this.sortedIndexes) {\n            if (Object.prototype.hasOwnProperty.call(this.sortedIndexes, i)) {\n              if (this.visibleRows[this.sortedIndexes[i]]) {\n                rows.push(this.sortedIndexes[i]);\n              }\n            }\n          }\n        }\n      }\n      return rows;\n    },\n\n    /**\n     * Checks which cells are hidden and shall be displayed as additional generated rows.\n     *\n     * @returns {Object} an object with sorted index as key and generated row array of cells as value\n     */\n    generatedRows() {\n      let generatedRows = {};\n\n      //just for updating the computed value\n      if (this.generatedUpdatedKey) {\n        for (let x = 0; x < this.rowsFinal.length; x++) {\n          let cells = this.rowsFinal[x].cells\n            ? this.rowsFinal[x].cells\n            : this.rowsFinal[x];\n\n          let generatedCells = {};\n\n          for (let i = 0; i < this.hiddenBreakpoints.length; i++) {\n            let bp = this.hiddenBreakpoints[i];\n            for (let j = 0; j < this.configFinal.columns.length; j++) {\n              let col = this.configFinal.columns[j];\n\n              const hide =\n                this.configFinal.hiddenCols[j] ||\n                (!this.configFinal.ignoreEmpty[j] &&\n                  this.configFinal.hideEmptyColumns &&\n                  (this.isColEmpty(j) || this.isColEmpty(j, x))) ||\n                this.emptyColumns[j];\n\n              if (\n                !hide &&\n                col.breakpoint &&\n                (col.breakpoint.toLocaleLowerCase() === \"all\" ||\n                  col.breakpoint.toLocaleLowerCase() === bp)\n              ) {\n                if (!col.sticky && !col.alwaysExpanded) {\n                  generatedCells[j] = cells[j];\n                }\n              }\n            }\n          }\n          generatedRows[x] = generatedCells;\n        }\n      }\n      return generatedRows;\n    },\n\n    stickyRows() {\n      let stickyRows = {};\n\n      for (let x = 0; x < this.rowsFinal.length; x++) {\n        let cells = this.rowsFinal[x].cells\n          ? this.rowsFinal[x].cells\n          : this.rowsFinal[x];\n\n        let stickyCells = {};\n\n        for (let i = 0; i < this.hiddenBreakpoints.length; i++) {\n          let bp = this.hiddenBreakpoints[i];\n          for (let j = 0; j < this.configFinal.columns.length; j++) {\n            let col = this.configFinal.columns[j];\n\n            const hide =\n              this.configFinal.hiddenCols[j] ||\n              (!this.configFinal.ignoreEmpty[j] &&\n                this.configFinal.hideEmptyColumns &&\n                (this.isColEmpty(j) || this.isColEmpty(j, x))) ||\n              this.emptyColumns[j];\n\n            if (!hide && col.sticky) {\n              stickyCells[j] = cells[j];\n            } else if (\n              !hide &&\n              col.breakpoint &&\n              (col.breakpoint.toLocaleLowerCase() === \"all\" ||\n                col.breakpoint.toLocaleLowerCase() === bp) &&\n              col.alwaysExpanded\n            ) {\n              stickyCells[j] = cells[j];\n            }\n          }\n        }\n        stickyRows[x] = stickyCells;\n      }\n      return stickyRows;\n    },\n\n    /**\n     * Calculates the all selected flag. Special case: defaultSelected is set and no user action in place\n     *\n     */\n    allSelectedProperty: {\n      get() {\n        if (this.allSelectedCustom === null) {\n          return this.configFinal.defaultSelected;\n        }\n        return this.allSelectedCustom;\n      },\n      set(val) {\n        this.allSelectedCustom = val;\n      },\n    },\n\n    /**\n     * Calculates number of current rows per page. Special case: no user action in place\n     *\n     */\n    currentRowsPerPageProperty: {\n      get() {\n        if (!this.customRowsPerPage) {\n          return this.currentRowsPerPage;\n        }\n        return this.customRowsPerPage;\n      },\n      set(val) {\n        this.customRowsPerPage = val;\n      },\n    },\n\n    /**\n     * Checks if page sort is currently active. Special case: no user action in place\n     *\n     */\n    pageSort: {\n      get() {\n        if (this.customPageSort === null) {\n          return this.configFinal.pageSort;\n        }\n        return this.customPageSort;\n      },\n      set(val) {\n        this.customPageSort = val;\n      },\n    },\n\n    /**\n     * Checks if multi sort is currently active. Special case: no user action in place\n     *\n     */\n    multiSort: {\n      get() {\n        if (this.customMultiSort === null) {\n          return this.configFinal.multiSort;\n        }\n        return this.customMultiSort;\n      },\n      set(val) {\n        this.customMultiSort = val;\n      },\n    },\n\n    /**\n     * Calculates the value of number of shown rows. If no pagination is set, all will be displayed.\n     *\n     */\n    currentRowsPerPage() {\n      if (!this.customRowsPerPage) {\n        return this.configFinal.pagination\n          ? this.configFinal.pagination\n          : \"All\";\n      }\n      return this.customRowsPerPage;\n    },\n\n    /**\n     * Checks if there are any generated rows in place\n     *\n     */\n    hasGeneratedRows() {\n      for (let row in this.generatedRows) {\n        if (Object.prototype.hasOwnProperty.call(this.generatedRows, row)) {\n          if (Object.keys(this.generatedRows[row]).length) {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Calculates the classes array for every cell from the align parameters of rows and cells and the custom class string passed to cells\n     *\n     */\n    cellClassesParsed() {\n      let cellClasses = [];\n\n      for (let i = 0; i < this.rowsFinal.length; i++) {\n        cellClasses.push([]);\n\n        let rAlign = this.rowsFinal[i].align;\n\n        let cells = this.rowsFinal[i].cells\n          ? this.rowsFinal[i].cells\n          : this.rowsFinal[i];\n\n        for (let j = 0; j < cells.length; j++) {\n          let classes = [];\n\n          let colAlign = this.configFinal.alignments[j];\n\n          if (cells[j].align || rAlign || colAlign) {\n            if (cells[j].align) {\n              classes.push(\"text-\" + cells[j].align);\n            } else if (rAlign) {\n              classes.push(\"text-\" + rAlign);\n            } else {\n              classes.push(\"text-\" + colAlign);\n            }\n          }\n\n          if (cells[j].classes) {\n            let splitted = cells[j].classes.split(\" \");\n            Array.prototype.push.apply(classes, splitted);\n          }\n\n          cellClasses[i].push(classes.join(\" \"));\n        }\n      }\n\n      return cellClasses;\n    },\n\n    /**\n     *Calculates the number of hidden columns\n     *\n     */\n    hiddenColumns() {\n      const rows = {};\n\n      for (let x = 0; x < this.visibleRowIndexes.length; x++) {\n        let hidden = 0;\n\n        const rowIndex = this.visibleRowIndexes[x];\n\n        for (let i = 0; i < this.hiddenBreakpoints.length; i++) {\n          let bp = this.hiddenBreakpoints[i];\n          for (let j = 0; j < this.configFinal.columns.length; j++) {\n            let col = this.configFinal.columns[j];\n            const hide =\n              this.configFinal.hiddenCols[j] ||\n              (!this.configFinal.ignoreEmpty[j] &&\n                this.configFinal.hideEmptyColumns &&\n                (this.isColEmpty(j) || this.isColEmpty(j, rowIndex))) ||\n              this.emptyColumns[j];\n\n            if (\n              !hide &&\n              col.breakpoint &&\n              (col.breakpoint.toLocaleLowerCase() === \"all\" ||\n                col.breakpoint.toLocaleLowerCase() === bp)\n            ) {\n              hidden++;\n              break;\n            }\n          }\n        }\n\n        rows[rowIndex] = hidden;\n      }\n\n      return rows;\n    },\n\n    /**\n     * Calculates the actual rows which shall be used.\n     *\n     */\n    rowsFinal() {\n      return this.configFinal.ajaxUrl\n        ? this.ajaxRows\n        : this.rows\n        ? this.rows\n        : [];\n    },\n\n    /**\n     * Checks if some rows are selected\n     *\n     */\n    someSelected() {\n      return Object.values(this.selected).filter((x) => x).length > 0;\n    },\n\n    /**\n     * Calculates the number of active sorts\n     *\n     */\n    numberOfSorts() {\n      return Object.keys(this.currentSortIndexes).length;\n    },\n\n    /**\n     * Calculates the actual visible pagination options to sort out options which are bigger than number of rows\n     *\n     */\n    paginationOptionsFilled() {\n      // let all = this.rowsFinal.length;\n      //\n      // if(this.configFinal.ajaxUrl){\n      // \tall = this.ajaxAll;\n      // }\n\n      let options = !this.configFinal.disallowAllOption ? [\"All\"] : [];\n      // let i = 0;\n      // while(i<this.paginationOptions.length&&i<all){\n      // \toptions.push(this.paginationOptions[i]);\n      // \ti++;\n      // }\n\n      return options.concat(this.paginationOptions);\n    },\n\n    /**\n     * Calculates columns which can be sorted from config value\n     *\n     */\n    sortingColumns() {\n      let columns = {};\n\n      for (let index in this.currentSortIndexes) {\n        if (\n          Object.prototype.hasOwnProperty.call(this.currentSortIndexes, index)\n        ) {\n          columns[index] = this.configFinal.columns[index];\n        }\n      }\n\n      return columns;\n    },\n\n    /**\n     * Calculates the classes of every table header\n     *\n     */\n    headerClass() {\n      let classes = [];\n\n      for (let i = 0; i < this.configFinal.number; i++) {\n        let iClasses = [];\n        if (this.configFinal.alignments[i]) {\n          iClasses.push(\"text-\" + this.configFinal.alignments[i]);\n        }\n\n        if (this.configFinal.sorts[i]) {\n          iClasses.push(\"sort-header\");\n\n          if (this.currentSortIndexes[i]) {\n            iClasses.push(\"active\");\n          }\n        }\n\n        classes.push(\n          iClasses.join(\" \") +\n            \"  quintable--table-container--table--header-row--th \" +\n            this.configFinal.columnClasses[i]\n        );\n      }\n      return classes;\n    },\n\n    /**\n     * Calculates the actual displayed page range (number of shown page buttons in pagination) to prevent showing pages out of row range\n     *\n     */\n    pageRange() {\n      return Math.min(this.configFinal.pageRange, this.pages);\n    },\n\n    /**\n     * Calculates number of pages regarding the rows per page and visible rows\n     *\n     */\n    pages() {\n      if (this.ajaxPages) {\n        return this.ajaxPages;\n      }\n\n      if (!this.currentRowsPerPage || this.currentRowsPerPage === \"All\") {\n        return 1;\n      }\n\n      return Math.max(\n        1,\n        Math.ceil(this.numberOfVisibleRows / this.currentRowsPerPage)\n      );\n    },\n\n    /**\n     * Calculates the number of visible Rows without paging;\n     *\n     */\n    numberOfVisibleRows() {\n      if (this.configFinal.ajaxUrl) {\n        return this.ajaxAll;\n      }\n\n      return this.filteredRows.filter((item) => {\n        return item;\n      }).length;\n    },\n\n    /**\n     * Calculates all accessible pages regarding to page range and current page\n     *\n     */\n    visiblePages() {\n      let pages = [];\n      let start = 0;\n\n      if (this.pages < this.pageRange || this.currentPage === 1) {\n        start = 1;\n      } else if (this.currentPage === this.pages) {\n        start = this.currentPage - (this.pageRange - 1);\n      } else {\n        let off;\n        if (this.pageRange % 2 === 0) {\n          off = this.pageRange / 2;\n        } else {\n          off = (this.pageRange - 1) / 2;\n          if (this.currentPage + off > this.pages) {\n            off++;\n          }\n        }\n\n        start = this.currentPage - off;\n      }\n\n      start = Math.max(start + this.pageOffset, 1);\n\n      for (let i = 0; i < this.pageRange; i++) {\n        if (i + start > this.pages) {\n          break;\n        }\n        pages.push(i + start);\n      }\n\n      return pages;\n    },\n\n    /**\n     * Checks if any filter is active\n     *\n     */\n    filterActive() {\n      return this.filtersFinal && Object.keys(this.filtersFinal).length;\n    },\n\n    /**\n     * Calculates all rows which passes the filter and search restrictions\n     *\n     */\n    filteredRows() {\n      let visible = [];\n\n      if (this.configFinal.ajaxUrl) {\n        return this.rowsFinal;\n      }\n\n      for (let i = 0; i < this.rowsFinal.length; i++) {\n        visible.push(true);\n      }\n\n      if (\n        (!this.configFinal.search && !this.filterActive) ||\n        (!this.filterActive &&\n          this.configFinal.search &&\n          this.query.length < this.configFinal.searchLength)\n      ) {\n        //Skip filtering, no search or filter is active\n        return visible;\n      }\n      //search per row\n      for (let i = 0; i < this.rowsFinal.length; i++) {\n        let row = this.rowsFinal[i].cells\n          ? this.rowsFinal[i].cells\n          : this.rowsFinal[i];\n        let match = false;\n        let searched = false;\n\n        if (\n          this.configFinal.search &&\n          this.query.length >= this.configFinal.searchLength\n        ) {\n          //check inner html/text per row/col\n          for (let j = 0; j < row.length; j++) {\n            let col = row[j];\n\n            let textVal = col.html ? col.html : col.text;\n\n            if (textVal) {\n              if (\n                this.configFinal.useFuzzySearch &&\n                fuzzy(\n                  (textVal + \"\").toLowerCase(),\n                  (this.query + \"\").toLowerCase()\n                ).score > 6\n              ) {\n                match = true;\n                break;\n              }\n\n              if (\n                (textVal + \"\")\n                  .toLowerCase()\n                  .indexOf((this.query + \"\").toLowerCase()) !== -1\n              ) {\n                match = true;\n                break;\n              }\n            }\n          }\n          //check set per row keywords\n          if (row.keywords) {\n            for (let k = 0; k < row.keywords.length; k++) {\n              if (\n                this.configFinal.useFuzzySearch &&\n                fuzzy(\n                  (row.keywords[k] + \"\").toLowerCase(),\n                  (this.query + \"\").toLowerCase()\n                ).score > 6\n              ) {\n                match = true;\n                break;\n              }\n\n              if (\n                (row.keywords[k] + \"\")\n                  .toLowerCase()\n                  .indexOf((this.query + \"\").toLowerCase()) !== -1\n              ) {\n                match = true;\n                break;\n              }\n            }\n          }\n\n          searched = true;\n        }\n\n        //filter are active but no filter values on row!\n        if (this.filterActive && !this.rowsFinal[i].filters) {\n          match = false;\n        }\n\n        //filter will be applied\n        else if (((searched && match) || !searched) && this.filterActive) {\n          //filter groups are defined\n          if (this.filterGroups.length) {\n            match = this.doFiltering(this.rowsFinal[i].filters);\n\n            //define dummy filter group with filters and relation set\n          } else {\n            let group = {\n              items: [],\n              relation: this.configFinal.filterRelation,\n            };\n\n            for (let filter in this.filtersFinal) {\n              if (\n                Object.prototype.hasOwnProperty.call(this.filtersFinal, filter)\n              ) {\n                group.items.push({ name: filter });\n              }\n            }\n\n            match = this.doFilteringForGroup(\n              this.filtersFinal,\n              this.rowsFinal[i].filters,\n              group\n            );\n\n            if (this.DEBUG) {\n              console.log(\"FILTER GROUPS CALCULATED\", this.filterGroups);\n            }\n          }\n          //######################################\n          if (this.DEBUG) {\n            console.log(\"\\n\");\n            console.log(\"ROW \" + i, match, this.rowsFinal[i].filters);\n            console.log(\"\\n\");\n          }\n          //######################################\n        }\n\n        visible[i] = match;\n      }\n\n      return visible;\n    },\n\n    /**\n     * Checks if there are currently no rows visible\n     *\n     */\n    noRows() {\n      return !this.numberOfVisibleRows;\n    },\n\n    /**\n     * Calculates the first visible row for displaying\n     *\n     */\n    firstVisibleRow() {\n      if (this.currentRowsPerPage === \"All\" || this.pages === 1) {\n        return 1;\n      }\n\n      return (\n        this.currentPage * this.currentRowsPerPage - this.currentRowsPerPage + 1\n      );\n    },\n\n    /**\n     * Calculates the last visible row for displaying\n     *\n     */\n    lastVisibleRow() {\n      if (this.currentRowsPerPage === \"All\" || this.pages === 1) {\n        return this.numberOfVisibleRows;\n      }\n      return Math.min(\n        this.firstVisibleRow + this.currentRowsPerPage - 1,\n        this.numberOfVisibleRows\n      );\n    },\n\n    /**\n     * Calculates if something is currently loading via ajax\n     *\n     */\n    ajaxLoading() {\n      return this.loading || this.fetching;\n    },\n\n    /**\n     * Calculates if a headline is to be shown on generated rows\n     *\n     */\n\n    showHeadlines() {\n      let shows = [];\n\n      for (let i = 0; i < this.configFinal.number; i++) {\n        if (\n          //headline is not empty\n          this.configFinal.headlines[i] &&\n          //show breakpoints match with set settings\n          //no show breakpoint is set\n          (!this.configFinal.columns[i].showHeadlineBreakpoint ||\n            //show breakpoint is set and the hidden breakpoints contain this breakpoint\n            (this.configFinal.columns[i].showHeadlineBreakpoint &&\n              this.hiddenBreakpoints.findIndex(\n                (x) =>\n                  this.configFinal.columns[i] &&\n                  x === this.configFinal.columns[i].showHeadlineBreakpoint\n              ) !== -1)) &&\n          //hide breakpoints match with set settings\n          //no hide breakpoint is set\n          (!this.configFinal.columns[i].hideHeadlineBreakpoint ||\n            //hide breakpoint is set and the hidden breakpoints contain this breakpoint\n            (this.configFinal.columns[i].hideHeadlineBreakpoint &&\n              this.hiddenBreakpoints.findIndex(\n                (x) =>\n                  this.configFinal.columns[i] &&\n                  x === this.configFinal.columns[i].hideHeadlineBreakpoint\n              ) === -1))\n        ) {\n          shows.push(true);\n        } else {\n          shows.push(false);\n        }\n      }\n      return shows;\n    },\n    /**\n     * Key of filter operator fuctions\n     *\n     */\n    operators() {\n      return Object.keys(this.operatorFunctions);\n    },\n    emptyColumns() {\n      const cols = {};\n\n      const ignore = this.configFinal.ignoreSortEmptyColumns;\n\n      for (let i = 0; i < this.configFinal.number; i++) {\n        const ignoredCol = this.configFinal.ignoreEmpty[i];\n        const sort = this.configFinal.sorts[i];\n\n        if (\n          !this.configFinal.hideEmptyColumns ||\n          ignoredCol ||\n          (ignore === \"none\" && sort) ||\n          (ignore === \"active\" &&\n            Object.keys(this.currentSortIndexes).includes(i + \"\"))\n        ) {\n          cols[i] = false;\n        } else {\n          cols[i] = this.isColEmpty(i);\n        }\n      }\n\n      return cols;\n    },\n    filtersFinal() {\n      if (!this.configFinal.storeState || !this.storedState.filters) {\n        return this.filters;\n      }\n      return this.storedState.filters;\n    },\n  },\n\n  watch: {\n    rowsFinal: {\n      handler(val) {\n        if (val && val.length) {\n          for (let i = 0; i < val.length; i++) {\n            let cells = val[i].cells ? val[i].cells : val[i];\n            if (cells.length !== this.config.columns.length) {\n              console.error(\n                `Row cell count on index ${i} doesn't fit for column config! expected: ${this.config.columns.length}, got: ${cells.length}`,\n                val[i]\n              );\n            }\n          }\n        }\n      },\n      immediate: true,\n    },\n\n    /**\n     * Check if some rows should be selected due to an outside change\n     *\n     */\n    preSelectedRows(val) {\n      if (!val) {\n        return;\n      }\n\n      for (let i = 0; i < this.rowsFinal.length; i++) {\n        this.$set(this.selected, i, false);\n      }\n\n      if (val && val.length) {\n        let counter = 0;\n\n        const indexes = this.configFinal.selectAllRows\n          ? this.rowsFinal.map((x, i) => i)\n          : this.visibleRowIndexes;\n\n        for (let i = 0; i < val.length; i++) {\n          const key = val[i].key;\n          const value = val[i].value;\n\n          for (let j = 0; j < indexes.length; j++) {\n            const index = indexes[j];\n            if (this.rowsFinal[index][key] === value) {\n              this.$set(this.selected, index, true);\n              counter++;\n            }\n          }\n        }\n\n        if (!this.configFinal.selectAllRows) {\n          this.allSelectedCustom =\n            counter && counter === this.visibleRows.filter((x) => x).length;\n        } else {\n          this.allSelectedCustom = counter && counter === this.rowsFinal.length;\n        }\n      } else {\n        this.allSelectedCustom = false;\n      }\n    },\n\n    /**\n     * Resets page and selects if a filter value is changes\n     *\n     */\n    filters: {\n      handler() {\n        if (this.configFinal.ajaxUrl) {\n          const clear = !(\n            this.configFinal.storeState && this.storedState.filters\n          );\n          this.pageSort = false;\n          this.loadViaAjax(clear, clear, \"FILTERS\");\n        }\n\n        if (this.pageSort) {\n          this.currentSortIndexes = {};\n          this.resetSorts();\n          this.recomputeEssentials();\n        }\n\n        if (this.configFinal.storeState) {\n          this.$delete(this.storedState, \"filters\");\n          localStorage.setItem(\n            `vue-quintable-${this.identifier}-filters`,\n            JSON.stringify(this.filtersFinal)\n          );\n        }\n      },\n      deep: true,\n    },\n    filtersFinal(val) {\n      this.$emit(\"update:filters\", val);\n    },\n    /**\n     * Trigger reload current page without changing filter/search/page from outside\n     *\n     */\n    updated(val) {\n      if (!this.configFinal.ajaxUrl) {\n        return;\n      }\n\n      if (val && val.clear) {\n        this.loadViaAjax(true, true, \"UPDATED\");\n      } else if (val) {\n        this.loadViaAjax(false, true, \"UPDATED\");\n      }\n    },\n\n    /**\n     * Set height of loader if loading is set from outside\n     *\n     */\n    loading() {\n      this.loaderHeight = this.$refs[\"height-wrapper\"]\n        ? this.$refs[\"height-wrapper\"].clientHeight\n        : 0;\n    },\n\n    /**\n     * Reset page and select if filtering/search is active\n     *\n     */\n    filteredRows: {\n      handler(val, old) {\n        if (\n          JSON.stringify(val) === JSON.stringify(old) ||\n          this.configFinal.ajaxUrl\n        ) {\n          return;\n        }\n\n        if (this.currentPage !== 1) {\n          this.currentPage = 1;\n        } else {\n          this.resetSelect(\"filteredRows watcher\");\n        }\n\n        const rows = [];\n        for (let i = 0; i < val.length; i++) {\n          const index = i.toString();\n          if (val[i]) {\n            rows.push(\n              this.rowsFinal[\n                this.sortedIndexes[index] ? this.sortedIndexes[index] : i\n              ]\n            );\n          }\n        }\n\n        this.$emit(\"filtered:rows\", rows, \"filtered:rows\");\n      },\n      deep: true,\n      immediate: true,\n    },\n\n    /**\n     * Emits an event if breakpoints are changed\n     *\n     */\n    hiddenBreakpoints(val) {\n      if (!this.initBreakpoints) {\n        this.$emit(\"change:breakpoints\", val, \"change:breakpoints\");\n      }\n      this.initBreakpoints = false;\n    },\n\n    /**\n     * Emits an event if a row is hovered\n     *\n     */\n    hoveredRow(val) {\n      if (val !== null) {\n        this.$emit(\"hover:row\", this.rowsFinal[val], \"hover:row\");\n      }\n    },\n\n    /**\n     * Resets page and selects if a search query is entered and emits and event\n     *\n     */\n    query(val, old) {\n      this.lastQuery = old;\n\n      if (this.configFinal.ajaxUrl) {\n        this.pageSort = false;\n        const clear = !(this.configFinal.storeState && this.storedState.query);\n        clearTimeout(this.queryAjaxTimeout);\n        this.queryAjaxTimeout = setTimeout(() => {\n          this.loadViaAjax(clear, clear, \"QUERY\");\n        }, this.configFinal.ajaxRequestDelay);\n      }\n\n      if (\n        val.length >= this.configFinal.searchLength &&\n        this.lastSearchQueryUpdated !== val\n      ) {\n        this.$emit(\"update:search\", val, \"update:search\");\n        this.lastSearchQueryUpdated = val;\n      } else if (this.lastSearchQueryUpdated !== null) {\n        this.lastSearchQueryUpdated = null;\n        this.$emit(\"update:search\", null, \"update:search\");\n      }\n\n      if (this.pageSort) {\n        this.currentSortIndexes = {};\n        this.resetSorts();\n        this.recomputeEssentials();\n      }\n\n      if (this.configFinal.storeState) {\n        this.$delete(this.storedState, \"query\");\n        localStorage.setItem(\n          `vue-quintable-${this.identifier}-query`,\n          this.query\n        );\n      }\n    },\n\n    /**\n     * Resets page and selects if the number of rows per page is changed and emits and event\n     *\n     */\n    currentRowsPerPage(val) {\n      this.$emit(\"update:rows-per-page\", val, \"update:rows-per-page\");\n\n      const clear = !(\n        this.configFinal.storeState && this.storedState[\"rows-per-page\"]\n      );\n\n      if (this.configFinal.storeState) {\n        this.$delete(this.storedState, \"rows-per-page\");\n        localStorage.setItem(\n          `vue-quintable-${this.identifier}-rows-per-page`,\n          this.currentRowsPerPage\n        );\n      }\n\n      if (this.configFinal.ajaxUrl) {\n        this.loadViaAjax(clear, clear, \"PAGE_ROWS\");\n        return;\n      }\n\n      if (this.currentPage !== 1) {\n        this.currentPage = 1;\n      } else if (!this.configFinal.selectAllRows) {\n        this.resetSelect(\"currentRowsPerPage watcher\");\n      }\n    },\n\n    /**\n     * Reset everything if rows have been changed (e.g. [re]loaded via ajax)\n     *\n     */\n    rows() {\n      this.clearLists();\n      this.initLists();\n\n      this.$nextTick(() => {\n        this.recomputeEssentials();\n        this.$forceUpdate();\n\n        if (this.configFinal.defaultSelected) {\n          this.allSelectedCustom = null;\n          this.checkAll(true);\n        }\n      });\n    },\n\n    /**\n     * Reset everything if config has been changed (e.g. [re]loaded via ajax)\n     *\n     */\n    config(val) {\n      if (typeof val !== \"object\") {\n        throw \"config must be an object\";\n      }\n\n      if (this.dynamicConfig) {\n        return;\n      }\n\n      this.initLists();\n      this.$forceUpdate();\n\n      if (this.configFinal.ajaxUrl) {\n        this.loadViaAjax(false, true, \"CONFIG\");\n      }\n\n      if (this.configFinal.defaultSelected) {\n        this.checkAll(true);\n      }\n    },\n\n    /**\n     * Prepare the selected rows array for passing to the event and emits it\n     *\n     */\n    selected: {\n      handler(val) {\n        let selected = [];\n        for (let index in this.sortedIndexes) {\n          if (Object.prototype.hasOwnProperty.call(this.sortedIndexes, index)) {\n            if (val[this.sortedIndexes[index]]) {\n              const row = this.rowsFinal[this.sortedIndexes[index]];\n              if (!row.disableSelect) {\n                selected.push(row);\n              }\n            }\n          }\n        }\n\n        if (this.configFinal.storeState) {\n          localStorage.setItem(\n            `vue-quintable-${this.identifier}-selected-rows`,\n            JSON.stringify(val)\n          );\n        }\n\n        this.$emit(\"input\", selected);\n        this.$emit(\"update:selected-rows\", selected);\n      },\n      deep: true,\n    },\n\n    /**\n     * Resets the row selection if page has been changed and emits an event\n     *\n     */\n    currentPage(val) {\n      this.pageOffset = 0;\n\n      this.$emit(\"update:page\", val, \"update:page\");\n\n      const clear = !(\n        this.configFinal.storeState && this.storedState[\"current-page\"]\n      );\n\n      if (this.configFinal.storeState) {\n        this.$delete(this.storedState, \"current-page\");\n        localStorage.setItem(\n          `vue-quintable-${this.identifier}-current-page`,\n          this.currentPage\n        );\n      }\n\n      if (this.configFinal.ajaxUrl) {\n        this.resetSelect(\"currentPage watcher ajax\");\n        this.loadViaAjax(false, clear, \"PAGE\");\n        return;\n      }\n\n      if (!this.configFinal.selectAllRows) {\n        this.resetSelect(\"currentPage watcher\");\n      }\n\n      if (this.pageSort) {\n        this.currentSortIndexes = {};\n        this.resetSorts();\n      }\n\n      this.recomputeEssentials();\n    },\n\n    /**\n     *  Reorder the indexes of sorting if a sort column has been removed (e.g. column 1,2,3 are active, 2 has been removed, 3 has to be 2 now)\n     *\n     */\n    customMultiSort(val) {\n      if (!val && Object.keys(this.currentSortIndexes).length > 1) {\n        let currentItem;\n        let currentIndex;\n        for (let index in this.currentSortIndexes) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              this.currentSortIndexes,\n              index\n            ) &&\n            this.currentSortIndexes[index].order === 0\n          ) {\n            currentItem = this.currentSortIndexes[index];\n            currentIndex = index;\n            break;\n          }\n        }\n\n        this.currentSortIndexes = {};\n        this.$set(this.currentSortIndexes, currentIndex, currentItem);\n\n        this.sort();\n      }\n    },\n\n    /**\n     * Reset sort order on page sort change\n     *\n     */\n    pageSort() {\n      this.currentSortIndexes = {};\n      this.resetSorts();\n      this.recomputeEssentials();\n    },\n\n    /**\n     * Reset sort order if it is changed from outside\n     *\n     */\n    sortOrder: {\n      immediate: true,\n      handler() {\n        this.currentSortIndexes = {};\n        for (let i = 0; i < this.sortOrder.length; i++) {\n          if (typeof this.sortOrder[i] === \"object\") {\n            this.setSortColumn(this.sortOrder[i].index, this.sortOrder[i].asc);\n          } else if (typeof this.sortOrder[i] === \"number\") {\n            this.setSortColumn(this.sortOrder[i]);\n          }\n        }\n      },\n    },\n  },\n  methods: {\n    /**\n     * sets search query from outside (search slot)\n     *\n     */\n    setSearchQuery(query) {\n      this.query = query;\n    },\n\n    /**\n     * just a small string casting function\n     *\n     */\n    valueToString: function (value) {\n      switch (value) {\n        case \"\":\n        case null:\n        case false:\n        case undefined:\n          return \"\";\n        case 0:\n        case \"0\":\n        default:\n          return String(value);\n      }\n    },\n\n    /**\n     * checks if the passed cell is empty for one or all rows\n     *\n     */\n    isColEmpty(i, rowIndex = -1) {\n      const rowIndexes = rowIndex > -1 ? [rowIndex] : this.visibleRowIndexes;\n      const visibleCells = rowIndexes\n        .map((index) => {\n          return this.rowsFinal[index];\n        })\n        .filter((row) => {\n          const cells = row.cells ? row.cells : row;\n\n          if (\n            typeof cells[i].isEmpty === \"boolean\" &&\n            cells[i].isEmpty === true\n          ) {\n            return false;\n          }\n\n          if (\n            typeof cells[i].text !== \"undefined\" &&\n            this.valueToString(cells[i].text)\n          ) {\n            return true;\n          }\n\n          if (\n            typeof cells[i].html !== \"undefined\" &&\n            this.valueToString(cells[i].html)\n          ) {\n            return true;\n          }\n          return false;\n        });\n      return visibleCells.length <= 0;\n    },\n\n    /**\n     * Handler for generic component events\n     *\n     */\n    handleComponentEvent(data) {\n      this.$emit(\"component:event\", data, \"component:event\");\n    },\n\n    /**\n     * Calculate which pages should be displayed in pagination due to page offset\n     *\n     */\n    updatePageOffset(factor) {\n      let result = this.pageOffset + this.pageRange * factor;\n\n      if (factor > 0) {\n        let offset = Math.min(result, this.pages - this.pageRange);\n        this.pageOffset = Math.min(offset, this.pages - this.currentPage);\n      } else if (factor < 0) {\n        this.pageOffset = Math.max(result, -(this.pages - this.pageRange));\n      } else {\n        this.pageOffset = 0;\n      }\n    },\n\n    cellFormatters(cIndex, cell) {\n      if (\n        typeof this.configFinal.columns[cIndex].cellFormatter === \"function\"\n      ) {\n        let formatted = this.configFinal.columns[cIndex].cellFormatter(cell);\n\n        if (typeof formatted !== \"object\") {\n          formatted = {\n            value: formatted,\n          };\n        }\n\n        return formatted;\n      }\n\n      return this.valueToString(cell.html)\n        ? cell.html\n        : this.valueToString(cell.text)\n        ? cell.text\n        : \"\";\n    },\n\n    /**\n     * Event listener for select row checkboxes. Checks if all rows are selected now and sets the allSelectedProperty in case\n     *\n     * @param bool selected or not\n     * @param index index of selected row\n     */\n    checkListener(bool, index) {\n      let tmp = Object.keys(this.selected)\n        .slice()\n        .map((key) => {\n          return (\n            !!this.selected[key] ||\n            !!(\n              this.rowsFinal[parseInt(key)] &&\n              this.rowsFinal[parseInt(key)].disableSelect\n            )\n          );\n        });\n\n      tmp[index] = !!bool;\n\n      if (!this.configFinal.selectAllRows) {\n        tmp = tmp.filter((x, index) => this.visibleRowIndexes.includes(index));\n\n        if (tmp.indexOf(false) !== -1) {\n          this.allSelectedProperty = false;\n        } else if (tmp.indexOf(false) === -1) {\n          this.allSelectedProperty = true;\n        }\n      } else {\n        if (tmp.indexOf(false) === -1) {\n          this.allSelectedProperty = true;\n        } else {\n          this.allSelectedProperty = false;\n        }\n      }\n    },\n\n    /**\n     * Check if a parent with certain class exists\n     *\n     */\n    hasSomeParentTheClass(element, className) {\n      if (\n        element instanceof HTMLElement &&\n        element.classList.contains(className)\n      ) {\n        return true;\n      }\n      return (\n        element instanceof Element &&\n        element.parentNode &&\n        this.hasSomeParentTheClass(element.parentNode, className)\n      );\n    },\n\n    /**\n     * Check if a parent with certain tag name exists\n     *\n     */\n    hasSomeParentTagName(element, tagName) {\n      if (\n        element instanceof HTMLElement &&\n        element.tagName.toLowerCase() === tagName.toLowerCase()\n      ) {\n        return true;\n      }\n      return (\n        element instanceof Element &&\n        element.parentNode &&\n        this.hasSomeParentTagName(element.parentNode, tagName)\n      );\n    },\n\n    /**\n     * Event listener for clicked row. Emits an event if the row has been expanded or collapsed. Emits and event that row was clicked\n     *\n     * @param e Click Event\n     * @param rowIndex Index of clicked row\n     */\n    onRowClick(e, rowIndex) {\n      if ((e.target || {}).type === \"checkbox\") {\n        return;\n      } else if (\n        this.hasSomeParentTheClass(e.target, \"generated-table\") &&\n        !this.nested\n      ) {\n        return;\n      }\n\n      let isLink = this.hasSomeParentTagName(e.target, \"a\");\n      let shouldPrevent = this.hasSomeParentTheClass(\n        e.target,\n        \"prevent-toggle\"\n      );\n\n      const index = rowIndex.toString();\n      const i = parseInt(rowIndex);\n\n      if (this.hiddenColumns[index] && !isLink && !shouldPrevent) {\n        if (!this.openRows[index]) {\n          this.$set(this.openRows, index, true);\n          this.$emit(\n            \"expand:row\",\n            this.rowsFinal[this.sortedIndexes[index]],\n            \"expand:row\"\n          );\n        } else {\n          this.$set(this.openRows, index, false);\n          this.$emit(\n            \"expand:row\",\n            this.rowsFinal[this.sortedIndexes[index]],\n            \"collapse:row\"\n          );\n        }\n\n        this.generatedUpdatedKey = Date.now();\n      }\n\n      this.$emit(\"click:row\", this.rowsFinal[i], \"click:row\", e.target);\n    },\n\n    /**\n     * Event listener for clicked cell. Emits and event that row was clicked\n     *\n     * @param cell Clicked Cell\n     */\n    onCellClick(cell) {\n      this.$emit(\"click:cell\", cell, \"click:cell\");\n    },\n\n    /**\n     * Event listener for hovered row. Sets the hoveredRow data entry\n     *\n     * @param index Index of hovered row\n     */\n    onMouseenterRow(index) {\n      if (this.hoveredRow !== index) {\n        this.hoveredRow = index;\n      }\n    },\n\n    /**\n     * Event listener for mouse leave of table body. Releases the hoveredRow data entry\n     *\n     */\n    onMouseleaveTable() {\n      this.hoveredRow = null;\n    },\n\n    /**\n     *\n     *\n     * @param index Index of removed sorting column\n     */\n    removeSort(index) {\n      for (let i in this.currentSortIndexes) {\n        if (Object.prototype.hasOwnProperty.call(this.currentSortIndexes, i)) {\n          let item = this.currentSortIndexes[i];\n          if (item.order > this.currentSortIndexes[index].order) {\n            item.order--;\n          }\n          this.$set(this.currentSortIndexes, i, item);\n        }\n      }\n      this.$delete(this.currentSortIndexes, index);\n\n      if (this.numberOfSorts === 0) {\n        this.resetSorts();\n        if (this.currentPage !== 1) {\n          this.currentPage = 1;\n        } else {\n          this.recomputeEssentials();\n        }\n\n        if (this.configFinal.ajaxUrl && !this.pageSort) {\n          this.loadViaAjax(true, true, \"SORT\");\n        }\n      } else {\n        this.sort();\n      }\n    },\n\n    resetSorts() {\n      for (let i = 0; i < this.rowsFinal.length; i++) {\n        const index = i.toString();\n        this.$set(this.sortedIndexes, index, i);\n      }\n    },\n\n    /**\n     * Select all relevant rows\n     *\n     */\n    checkAll(force = false) {\n      let value = this.allSelectedProperty;\n\n      if (force) {\n        value = true;\n      }\n\n      let counter = 0;\n\n      for (let index in this.sortedIndexes) {\n        if (Object.prototype.hasOwnProperty.call(this.sortedIndexes, index)) {\n          index = parseInt(index);\n          if (\n            (!this.configFinal.selectAllRows &&\n              this.visibleRows[this.sortedIndexes[index]]) ||\n            (this.configFinal.selectAllRows &&\n              this.filteredRows[this.sortedIndexes[index]])\n          ) {\n            this.$set(this.selected, this.sortedIndexes[index], value);\n            counter++;\n          } else {\n            this.$set(this.selected, this.sortedIndexes[index], false);\n          }\n        }\n      }\n\n      if (value) {\n        if (!this.configFinal.selectAllRows) {\n          this.allSelectedCustom =\n            counter && counter === this.visibleRows.filter((x) => x).length;\n        } else {\n          this.allSelectedCustom = counter && counter === this.rowsFinal.length;\n        }\n      }\n    },\n\n    /**\n     * Do the filtering for all rows against all groups\n     *\n     * @param filterValues the set filter keys and values\n     *\n     * @returns {boolean}\n     */\n    doFiltering(filterValues) {\n      let results = [];\n\n      for (let i = 0; i < this.filterGroups.length; i++) {\n        results.push(\n          this.doFilteringForGroup(\n            this.filtersFinal,\n            filterValues,\n            this.filterGroups[i]\n          )\n        );\n\n        if (this.DEBUG && i < this.filterGroups.length - 1) {\n          console.log(this.configFinal.filterGroupRelation);\n        }\n      }\n      //######################################\n      if (this.DEBUG) {\n        console.log(\n          \"RESULTS FOR GROUPS:\",\n          results,\n          this.configFinal.filterGroupRelation\n        );\n      }\n      //######################################\n\n      if (this.configFinal.filterGroupRelation === \"AND\") {\n        return results.indexOf(false) === -1;\n      } else if (this.configFinal.filterGroupRelation === \"OR\") {\n        return results.indexOf(true) !== -1;\n      } else {\n        return true;\n      }\n    },\n\n    /**\n     * Do the actual filtering for a row against a cetrain group\n     *\n     * @param filters the set filter keys and values\n     * @param filterValues the filter values of one row\n     * @param group the actual filter group\n     * @param index just a counter\n     *\n     * @returns {boolean}\n     */\n    doFilteringForGroup(filters, filterValues, group, index = 0) {\n      //###################################### DEBUG\n      let spaces = \"   \";\n\n      for (let i = 0; i < index; i++) {\n        spaces += \"   \";\n      }\n\n      if (this.DEBUG) {\n        if (group.items) {\n          let str = spaces;\n          let tmp = group.items.slice();\n\n          let cmp = function (a, b) {\n            if (a.name === undefined) {\n              return 1;\n            }\n            if (b.name === undefined) {\n              return -1;\n            }\n            return 0;\n          };\n\n          tmp = tmp.sort(cmp);\n\n          for (let i = 0; i < tmp.length; i++) {\n            if (tmp[i].name) {\n              str += tmp[i].name;\n              if (i < tmp.length - 1) {\n                str += \" \" + group.relation + \" \";\n              }\n            }\n          }\n\n          console.log(str);\n        }\n\n        console.log(spaces, \"GROUP:\", group);\n      }\n      //###################################### / DEBUG\n\n      let found = false;\n\n      if (group.relation === \"AND\") {\n        for (let key in filters) {\n          if (Object.prototype.hasOwnProperty.call(filters, key)) {\n            if (\n              this.filterGroups.length &&\n              !this.findInFilterGroups(key, this.filterGroups)\n            ) {\n              continue;\n            }\n\n            let allIncluding = true;\n            for (let i = 0; i < group.items.length; i++) {\n              let item = group.items[i];\n\n              if (item.name && filterValues[item.name] === undefined) {\n                allIncluding = false;\n                break;\n              }\n            }\n\n            if (allIncluding) {\n              for (let i = 0; i < group.items.length; i++) {\n                let item = group.items[i];\n\n                found = true;\n                if (item.items) {\n                  found = this.doFilteringForGroup(\n                    filters,\n                    filterValues,\n                    item,\n                    index + 1\n                  );\n                }\n\n                if (!found) {\n                  break;\n                }\n\n                if (typeof filters[item.name] === \"undefined\") {\n                  continue;\n                }\n\n                let operator =\n                  typeof filters[item.name] === \"object\" &&\n                  filters[item.name] !== null &&\n                  filters[item.name][\"operator\"] &&\n                  this.operators.includes(filters[item.name][\"operator\"])\n                    ? filters[item.name][\"operator\"]\n                    : this.defaultOperator;\n                let filterProperties = this.getFilterValues(filters[item.name]);\n\n                const cmpFunction =\n                  typeof filters[item.name].compare === \"function\"\n                    ? filters[item.name].compare\n                    : this.operatorFunctions[operator];\n\n                for (let j = 0; j < filterProperties.length; j++) {\n                  const matches = cmpFunction(\n                    filterProperties[j],\n                    filterValues[item.name]\n                  );\n                  if (!matches) {\n                    found = false;\n                    break;\n                  }\n                }\n\n                if (!found) {\n                  break;\n                }\n\n                //actual checking for matching\n                // if( Array.isArray(filters[item.name]) && filters[item.name].length && filters[item.name].indexOf(filterValues[item.name]) === -1){\n                // \tfound =  false;\n                // \tbreak;\n                // }else if( !Array.isArray(filters[item.name]) && typeof filters[item.name] !== \"object\" && filterValues[item.name] !== filters[item.name]){\n                // \tfound =  false;\n                // \tbreak;\n                // }\n              }\n            }\n          }\n        }\n        return found;\n      } else if (group.relation === \"OR\" || group.items) {\n        for (let key in filters) {\n          if (Object.prototype.hasOwnProperty.call(filters, key)) {\n            if (\n              this.filterGroups.length &&\n              !this.findInFilterGroups(key, this.filterGroups)\n            ) {\n              continue;\n            }\n\n            for (let i = 0; i < group.items.length; i++) {\n              let item = group.items[i];\n\n              if (item.items) {\n                found = this.doFilteringForGroup(\n                  filters,\n                  filterValues,\n                  item,\n                  index + 1\n                );\n\n                if (found) {\n                  break;\n                }\n              }\n\n              if (typeof filters[item.name] === \"undefined\") {\n                continue;\n              }\n\n              let operator =\n                typeof filters[item.name] === \"object\" &&\n                filters[item.name] !== null &&\n                filters[item.name][\"operator\"] &&\n                this.operators.includes(filters[item.name][\"operator\"])\n                  ? filters[item.name][\"operator\"]\n                  : this.defaultOperator;\n              let filterProperties = this.getFilterValues(filters[item.name]);\n\n              const cmpFunction =\n                typeof filters[item.name].compare === \"function\"\n                  ? filters[item.name].compare\n                  : this.operatorFunctions[operator];\n\n              for (let j = 0; j < filterProperties.length; j++) {\n                const matches = cmpFunction(\n                  filterProperties[j],\n                  filterValues[item.name]\n                );\n\n                if (matches) {\n                  found = true;\n                  break;\n                }\n              }\n\n              if (found) {\n                break;\n              }\n\n              // //actual checking for matching\n              // if(Array.isArray(filters[item.name]) && filters[item.name].length && filters[item.name].indexOf(filterValues[item.name]) !== -1){\n              // \tfound =  true;\n              // \tbreak;\n              // }else if(!Array.isArray(filters[item.name]) && typeof filters[item.name] !== \"object\" && filterValues[item.name] && filters[item.name] && filterValues[item.name] === filters[item.name]){\n              // \tfound =  true;\n              // \tbreak;\n              // }\n            }\n          }\n        }\n        return found;\n      } else {\n        return true;\n      }\n    },\n\n    /**\n     *\n     * Helper method to calculate an array of filter values from value/array/object\n     *\n     */\n    getFilterValues(values) {\n      return values instanceof RegExp ||\n        typeof values !== \"object\" ||\n        values === null\n        ? [values]\n        : Array.isArray(values)\n        ? values\n        : this.getFilterValues(values.values);\n    },\n\n    /**\n     * Search a certain filter key in a filter group\n     *\n     * @param key the filter key\n     * @param arr the group\n     * @param index just a counter\n     * @returns {boolean}\n     */\n    findInFilterGroups(key, arr, index = 0) {\n      if (!arr) {\n        return false;\n      }\n\n      let found = false;\n\n      for (let i = 0; i < arr.length; i++) {\n        let item = arr[i];\n        if (item.items) {\n          found = this.findInFilterGroups(key, item.items, index + 1);\n          if (found) {\n            break;\n          }\n        }\n\n        if (item.name === key) {\n          found = true;\n          break;\n        }\n      }\n      return found;\n    },\n\n    /**\n     * Change page with certain value\n     *\n     * @param page\n     */\n    gotoPage(page) {\n      if (page === \"prev\") {\n        if (this.currentPage - 1 > 0) {\n          this.currentPage--;\n        }\n      } else if (page === \"next\") {\n        if (this.currentPage + 1 <= this.pages) {\n          this.currentPage++;\n        }\n      } else if (page === \"first\") {\n        this.currentPage = 1;\n      } else if (page === \"last\") {\n        this.currentPage = this.pages;\n      } else {\n        this.currentPage = page;\n      }\n    },\n\n    /**\n     * Add a column to the sorting or change the sort direction of set sorting column\n     *\n     * @param index the column\n     * @param asc bool if it shall be set to a direction\n     */\n    setSortColumn(sortIndex, asc) {\n      const i = parseInt(sortIndex);\n      const index = sortIndex.toString();\n\n      if (!this.configFinal.sorts[i]) {\n        return;\n      }\n\n      let item;\n\n      if (!this.currentSortIndexes[index]) {\n        if (!this.multiSort) {\n          this.currentSortIndexes = {};\n        }\n\n        item = {\n          headline: this.configFinal.headlines[i],\n          index: i,\n          asc:\n            this.configFinal.sorts[i] === true\n              ? true\n              : this.configFinal.sorts[i] === \"ASC\",\n          order: this.numberOfSorts,\n        };\n      } else {\n        item = this.currentSortIndexes[index];\n        item.asc = !item.asc;\n      }\n\n      if (typeof asc !== \"undefined\") {\n        item.asc = asc;\n      }\n\n      this.$set(this.currentSortIndexes, index, item);\n\n      if (this.configFinal.storeState) {\n        localStorage.setItem(\n          `vue-quintable-${this.identifier}-sort-indexes`,\n          JSON.stringify(this.currentSortIndexes)\n        );\n      }\n\n      this.$emit(\"update:sort\", this.currentSortIndexes, \"update:sort\");\n\n      this.sort();\n    },\n\n    /**\n     * The actual sorting process. Sort by sorting value or the inner text/html of the cells\n     *\n     */\n    sort(preventReset = false) {\n      if (this.configFinal.ajaxUrl && !this.pageSort) {\n        this.loadViaAjax(!preventReset, !preventReset, \"SORT\");\n        return;\n      }\n\n      let allRows = this.rowsFinal.slice();\n      let rows = [];\n      let visibleIndexes = [];\n      let sortedIndexesBefore = {};\n\n      if (this.pageSort) {\n        visibleIndexes = this.visibleRowIndexes.slice();\n\n        if (!visibleIndexes.length) {\n          const length = this.configFinal.pagination\n            ? this.configFinal.pagination\n            : this.rowsFinal.length;\n          for (let i = 0; i < length; i++) {\n            visibleIndexes.push(i);\n          }\n        }\n\n        let counter = 0;\n        for (let i = 0; i < allRows.length; i++) {\n          allRows[i].index = i;\n          if (visibleIndexes.indexOf(i) !== -1) {\n            if (counter < this.configFinal.pagination) {\n              rows.push(allRows[i]);\n            }\n            counter++;\n          }\n        }\n\n        if (Object.keys(this.sortedIndexes).length) {\n          sortedIndexesBefore = Object.assign({}, this.sortedIndexes);\n        } else {\n          for (let i = 0; i < allRows.length; i++) {\n            this.$set(sortedIndexesBefore, i.toString(), i);\n          }\n        }\n      } else {\n        rows = this.rowsFinal.slice();\n        for (let i = 0; i < rows.length; i++) {\n          rows[i].index = i;\n        }\n      }\n\n      let sortableIndexes = [];\n      for (let index in this.currentSortIndexes) {\n        if (\n          Object.prototype.hasOwnProperty.call(this.currentSortIndexes, index)\n        ) {\n          let data = this.currentSortIndexes[index];\n          data.index = index;\n          sortableIndexes.push(data);\n        }\n      }\n\n      sortableIndexes.sort(function (a, b) {\n        return a.order - b.order;\n      });\n\n      let compare = (a, b, keys, index) => {\n        index = index || 0;\n\n        let currentKey = keys[index];\n\n        let i = currentKey.index;\n\n        let cellsA = a.cells ? a.cells : a;\n        let cellsB = b.cells ? b.cells : b;\n\n        let aValue =\n          typeof cellsA[i].sortValue !== \"undefined\" &&\n          cellsA[i].sortValue !== null\n            ? cellsA[i].sortValue\n            : cellsA[i].html\n            ? cellsA[i].html\n            : cellsA[i].text;\n        let bValue =\n          typeof cellsB[i].sortValue !== \"undefined\" &&\n          cellsB[i].sortValue !== null\n            ? cellsB[i].sortValue\n            : cellsB[i].html\n            ? cellsB[i].html\n            : cellsB[i].text;\n\n        if (typeof aValue === \"string\") {\n          aValue = aValue.toLowerCase();\n        }\n\n        if (typeof bValue === \"string\") {\n          bValue = bValue.toLowerCase();\n        }\n\n        if (!isNaN(aValue)) {\n          aValue = parseFloat(aValue);\n        } else if (typeof aValue === \"string\" && aValue.match(/^-?\\d+$/)) {\n          aValue = parseFloat(aValue);\n        } else if (typeof aValue === \"string\" && aValue.match(/^\\d+\\.\\d+$/)) {\n          aValue = parseFloat(aValue);\n        }\n\n        if (!isNaN(bValue)) {\n          bValue = parseFloat(bValue);\n        } else if (typeof bValue === \"string\" && bValue.match(/^-?\\d+$/)) {\n          bValue = parseFloat(bValue);\n        } else if (typeof bValue === \"string\" && bValue.match(/^\\d+\\.\\d+$/)) {\n          bValue = parseFloat(bValue);\n        }\n\n        if (currentKey.asc) {\n          return aValue > bValue\n            ? 1\n            : aValue < bValue\n            ? -1\n            : keys[index + 1]\n            ? compare(a, b, keys, index + 1)\n            : 1;\n        } else {\n          return aValue < bValue\n            ? 1\n            : aValue > bValue\n            ? -1\n            : keys[index + 1]\n            ? compare(a, b, keys, index + 1)\n            : -1;\n        }\n      };\n\n      rows.sort(function (a, b) {\n        return compare(a, b, sortableIndexes);\n      });\n\n      const finalRows = [];\n\n      let counterRows = 0;\n      let counterAdded = 0;\n      for (let i = 0; i < allRows.length; i++) {\n        const index = i.toString();\n        if (this.pageSort && visibleIndexes.indexOf(i) !== -1) {\n          if (counterRows < this.configFinal.pagination) {\n            finalRows.push(rows[counterAdded]);\n            counterAdded++;\n          } else {\n            finalRows.push(allRows[sortedIndexesBefore[index]]);\n          }\n          counterRows++;\n        } else if (this.pageSort) {\n          finalRows.push(allRows[sortedIndexesBefore[index]]);\n        } else {\n          finalRows.push(rows[i]);\n        }\n      }\n\n      for (let i = 0; i < finalRows.length; i++) {\n        const index = i.toString();\n        this.$set(this.sortedIndexes, index, parseInt(finalRows[i].index));\n      }\n\n      if (!this.pageSort && !preventReset) {\n        this.currentPage = 1;\n      }\n\n      if (!this.configFinal.selectAllRows && !this.pageSort && !preventReset) {\n        this.resetSelect(\"sort method\");\n      }\n\n      this.recomputeEssentials();\n    },\n\n    /**\n     * Trigger recomputing of the essential parts of the table to ensure correct displaying\n     *\n     */\n    recomputeEssentials() {\n      this.$nextTick(() => {\n        this.rowsUpdatedKey = Date.now();\n        this.indexesUpdatedKey = Date.now();\n        this.generatedUpdatedKey = Date.now();\n      });\n    },\n\n    /**\n     * Initialize nested object lists\n     *\n     */\n    initLists() {\n      if (!this.rowsFinal) {\n        return;\n      }\n\n      for (let i = 0; i < this.rowsFinal.length; i++) {\n        const index = i.toString();\n\n        // if (typeof this.generatedRows[index] !== \"object\") {\n        //   this.$set(this.generatedRows,index,{});\n        // }\n\n        // if (typeof this.stickyRows[index] !== \"object\") {\n        //   this.$set(this.stickyRows, index, {});\n        // }\n\n        if (typeof this.sortedIndexes[index] === \"undefined\") {\n          this.$set(this.sortedIndexes, index, i);\n        }\n\n        if (typeof this.selected[index] === \"undefined\") {\n          this.$set(this.selected, index, false);\n        }\n\n        if (this.configFinal.expandedAll || this.rowsFinal[i].expanded) {\n          this.$set(this.openRows, index, true);\n        } else {\n          this.$set(this.openRows, index, false);\n        }\n      }\n    },\n\n    /**\n     * Clear all relevant lists to ensure re-initialization\n     *\n     */\n    clearLists(clearSelected = true) {\n      if (clearSelected) {\n        this.selected = {};\n      }\n      this.openRows = {};\n      this.sortedIndexes = {};\n    },\n\n    /**\n     * Clear all row selections\n     *\n     */\n    resetSelect(accessor) {\n      if (this.DEBUG) {\n        console.log(\"CALLED FROM:\", accessor);\n      }\n      this.allSelectedProperty = false;\n\n      for (let i = 0; i < this.rowsFinal.length; i++) {\n        this.$set(this.selected, i, false);\n      }\n    },\n    /**\n     * Load new rows via ajax including filters, search query and pagination\n     *\n     * @param clear\n     * @param accessor\n     */\n    loadViaAjax(\n      clearSortAndPage = false,\n      clearSelected = true,\n      accessor = null\n    ) {\n      if (this.DEBUG) {\n        console.log(\"CALLED FROM:\", accessor);\n      }\n\n      let query = this.query;\n\n      //Do nothing if there is a query and it is shorter than the minimum search length and either the last entered query is shorter or the last entered query is also shorter than the minimum search length\n      if (\n        query &&\n        query.length < this.configFinal.searchLength &&\n        (this.lastQuery.length < query.length ||\n          this.lastQuery.length < this.configFinal.searchLength)\n      ) {\n        return;\n      }\n      //Reset last query if the current query is empty and last query hasn't been reset\n      else if (!query && this.lastQuery) {\n        const tmp = this.lastQuery;\n        this.lastQuery = \"\";\n        //Return if last query was shorter than minimum search length (means it was the last )\n        if (tmp.length < this.configFinal.searchLength) {\n          return;\n        }\n      }\n      //Set query to empty string (no filtering) if the query is shorter than minimum search length\n      else if (query && query.length < this.configFinal.searchLength) {\n        query = \"\";\n      }\n\n      if (this.cancelSource) {\n        this.cancelSource.cancel(\"Operation canceled by the user.\");\n      }\n\n      this.clearLists(clearSelected);\n\n      this.ajaxRows = [];\n\n      if (clearSortAndPage) {\n        this.currentPage = 1;\n        this.resetSelect(\"loadViaAjax method\");\n      }\n\n      this.loaderHeight = this.$refs[\"height-wrapper\"]\n        ? this.$refs[\"height-wrapper\"].clientHeight\n        : 0;\n\n      this.fetching = true;\n\n      let params = {\n        search: query,\n        filters: this.filtersFinal,\n        perPage: this.currentRowsPerPage,\n        page: this.currentPage,\n        sort:\n          this.numberOfSorts > 0\n            ? {\n                indexes: this.currentSortIndexes,\n                columns: this.sortingColumns,\n              }\n            : null,\n      };\n\n      this.cancelSource = this.axiosFinal.CancelToken.source();\n\n      const headers = {\n        \"Content-Type\": \"application/json\",\n      };\n\n      this.axiosFinal\n        .request(this.configFinal.ajaxUrl, {\n          method: this.configFinal.requestMethod,\n          params: this.configFinal.requestMethod === \"GET\" ? params : null,\n          data: this.configFinal.requestMethod === \"POST\" ? params : null,\n          cancelToken: this.cancelSource.token,\n          headers,\n        })\n        .then((response) => {\n          if (\n            !response.data.rows ||\n            typeof response.data.rows.length === \"undefined\"\n          ) {\n            throw \"Response data has to contain rows property. Please see Readme.md for details\";\n          }\n\n          if (typeof response.data.all === \"undefined\") {\n            throw \"Response data has to contain all property. Please see Readme.md for details\";\n          }\n\n          this.ajaxAll = response.data.all;\n          this.ajaxPages = Math.max(\n            1,\n            Math.ceil(response.data.all / this.currentRowsPerPage)\n          );\n\n          this.$emit(\n            \"ajax:rows\",\n            {\n              rows: response.data.rows,\n              old: JSON.parse(JSON.stringify(this.ajaxRows)),\n              all: this.ajaxAll,\n            },\n            \"ajax:rows\"\n          );\n\n          if (response.data.all) {\n            this.ajaxRows = response.data.rows;\n            // this.checkStoredSelectedRows(true);\n            this.initLists();\n          }\n\n          this.fetching = false;\n        })\n        .catch((error) => {\n          if (this.axiosFinal.isCancel(error)) {\n            console.log(\"Request canceled\", error.message);\n          } else {\n            this.fetching = false;\n            console.error(error);\n            this.$emit(\"ajax:error\", error, \"ajax:error\");\n          }\n        });\n    },\n\n    /**\n     * Check if DOM element is visible\n     *\n     * @param el DOMElement\n     * @returns {boolean}\n     */\n    elementVisible(el) {\n      if (el) {\n        let computedStyle = window.getComputedStyle(el);\n        return computedStyle.display !== \"none\";\n      }\n      return false;\n    },\n\n    /**\n     * Event Listener for window resize event.\n     *\n     */\n    breakpointListener() {\n      clearTimeout(this.breakpointTimeout);\n\n      this.breakpointTimeout = setTimeout(() => {\n        this.generateHiddenBreakpoints(false);\n      }, 250);\n    },\n\n    /**\n     * Generate the list of hidden breakpoints\n     *\n     * @param regenerate\n     */\n    generateHiddenBreakpoints(regenerate = false) {\n      if (regenerate) {\n        this.hiddenBreakpoints = [];\n      }\n\n      let breakpoints = [];\n      if (!this.elementVisible(this.$refs.xxl)) {\n        breakpoints.push(\"xxl\");\n      }\n\n      if (!this.elementVisible(this.$refs.xl)) {\n        breakpoints.push(\"xl\");\n      }\n\n      if (!this.elementVisible(this.$refs.lg)) {\n        breakpoints.push(\"lg\");\n      }\n\n      if (!this.elementVisible(this.$refs.md)) {\n        breakpoints.push(\"md\");\n      }\n\n      if (!this.elementVisible(this.$refs.sm)) {\n        breakpoints.push(\"sm\");\n      }\n\n      breakpoints.push(\"all\");\n\n      if (\n        JSON.stringify(this.hiddenBreakpoints) !== JSON.stringify(breakpoints)\n      ) {\n        this.hiddenBreakpoints = breakpoints;\n      }\n    },\n\n    checkStoredSelectedRows(deleteStore = false) {\n      if (this.storedState[\"pre-selected-rows\"]) {\n        //TODO\n      }\n\n      if (this.storedState[\"selected-rows\"]) {\n        this.selected = JSON.parse(\n          JSON.stringify(this.storedState[\"selected-rows\"])\n        );\n        const counter = Object.values(this.selected).filter((x) => x).length;\n        if (!this.configFinal.selectAllRows) {\n          this.allSelectedCustom =\n            counter && counter === this.visibleRows.filter((x) => x).length;\n        } else {\n          this.allSelectedCustom = counter && counter === this.rowsFinal.length;\n        }\n        if (deleteStore) {\n          this.$delete(this.storedState, \"selected-rows\");\n        }\n      }\n    },\n  },\n  created() {\n    if (this.configFinal.storeState) {\n      const filters = localStorage.getItem(\n        `vue-quintable-${this.identifier}-filters`\n      );\n      if (filters) {\n        this.$set(this.storedState, \"filters\", JSON.parse(filters));\n      }\n\n      const query = localStorage.getItem(\n        `vue-quintable-${this.identifier}-query`\n      );\n      if (query) {\n        this.$set(this.storedState, \"query\", query);\n      }\n\n      const rowsPerPage = localStorage.getItem(\n        `vue-quintable-${this.identifier}-rows-per-page`\n      );\n      if (rowsPerPage) {\n        this.$set(this.storedState, \"rows-per-page\", parseInt(rowsPerPage));\n      }\n\n      const selectedRows = localStorage.getItem(\n        `vue-quintable-${this.identifier}-selected-rows`\n      );\n      if (selectedRows) {\n        this.$set(this.storedState, \"selected-rows\", JSON.parse(selectedRows));\n      }\n\n      const page = localStorage.getItem(\n        `vue-quintable-${this.identifier}-current-page`\n      );\n      if (page) {\n        this.$set(this.storedState, \"current-page\", parseInt(page));\n      }\n\n      const sortIndexes = localStorage.getItem(\n        `vue-quintable-${this.identifier}-sort-indexes`\n      );\n      if (sortIndexes) {\n        this.$set(this.storedState, \"sort-indexes\", JSON.parse(sortIndexes));\n      }\n    }\n    this.initLists();\n\n    //Pre-select rows in case\n    let counter = 0;\n\n    const indexes = this.configFinal.selectAllRows\n      ? this.rowsFinal.map((x, i) => i)\n      : this.visibleRowIndexes;\n    for (let i = 0; i < indexes.length; i++) {\n      let row = this.rowsFinal[i];\n      if (row.selected) {\n        this.$set(this.selected, i, true);\n      }\n      if (row.selected || row.disableSelect) {\n        counter++;\n      }\n    }\n\n    if (\n      !this.configFinal.selectAllRows &&\n      counter &&\n      counter === this.visibleRows.filter((x) => x).length\n    ) {\n      this.allSelectedCustom = true;\n    } else if (\n      this.configFinal.selectAllRows &&\n      counter &&\n      counter === this.rowsFinal.length\n    ) {\n      this.allSelectedCustom = true;\n    }\n\n    if (this.initialSearchTerm) {\n      this.query = this.initialSearchTerm;\n    }\n\n    if (this.storedState.query) {\n      this.query = this.storedState.query;\n    }\n\n    if (this.storedState[\"rows-per-page\"]) {\n      this.customRowsPerPage = this.storedState[\"rows-per-page\"];\n    }\n\n    if (this.storedState[\"sort-indexes\"]) {\n      this.currentSortIndexes = this.storedState[\"sort-indexes\"];\n      this.sort(true);\n    }\n\n    if (this.storedState[\"current-page\"]) {\n      this.$nextTick(() => {\n        this.currentPage = this.storedState[\"current-page\"];\n      });\n    }\n    this.$nextTick(this.checkStoredSelectedRows);\n  },\n  mounted() {\n    if (this.configFinal.ajaxUrl) {\n      this.loadViaAjax(false, true, \"MOUNTED\");\n    }\n\n    if (this.configFinal.defaultSelected) {\n      this.checkAll(true);\n    }\n\n    this.generateHiddenBreakpoints();\n\n    //bind listener to window resize\n    window.addEventListener(\"resize\", this.breakpointListener);\n  },\n  beforeDestroy() {\n    //release listener from window resize\n    window.removeEventListener(\"resize\", this.breakpointListener);\n  },\n};\n</script>\n\n<style scoped>\ntable.generated-table td {\n  vertical-align: top;\n}\n\n.generated-cell-element {\n  padding: 0.5rem 0.5rem;\n}\n\n.toggle-cell {\n  width: 0;\n  white-space: nowrap;\n  padding: 0.5rem 0.5rem;\n}\n\n.toggle-cell.invisible > span {\n  pointer-events: none;\n  opacity: 0;\n}\n\n.cursor-pointer {\n  cursor: pointer;\n}\n.icon-check {\n  padding: 3px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n}\n\n.loader-wrapper {\n  position: relative;\n  min-height: 100px;\n}\n\n.loader {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate3d(-50%, -50%, 0);\n}\n\n.table-wrapper .bg-muted {\n  background: rgba(0, 0, 0, 0.1);\n}\n\n.table-wrapper .select-th .pretty,\n.table-wrapper .select-td .pretty {\n  background: #fff;\n  margin-right: 0 !important;\n  width: 18px;\n}\n\n.footer {\n  height: auto;\n  background-color: transparent;\n}\n\n.table th {\n  border-top: none;\n}\n\n.sort-header {\n  cursor: pointer;\n  position: relative;\n}\n\n.sort-header:hover {\n  padding-right: 20px !important;\n}\n\n.sort-header.active {\n  padding-right: 45px !important;\n}\n\n.sort-header .sorting-icon {\n  position: absolute;\n  right: 5px;\n  opacity: 0;\n  transition: opacity 0.25s ease-in-out;\n}\n\n.sort-header.active .sorting-icon,\n.sort-header:hover .sorting-icon {\n  opacity: 1;\n}\n\n.ajax-loader {\n  font-size: 3em;\n}\n\n.generated-cell-element-content {\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  word-break: break-word;\n  hyphens: auto;\n}\n\n/*.generated-row-cell:nth-child(odd) {*/\n/*  background: rgba(255, 255, 0, 0.1);*/\n/*}*/\n\n/*.generated-row-cell:nth-child(even) {*/\n/*  background: rgba(100, 100, 0, 0.1);*/\n/*}*/\n\n/*.generated-row-cell:nth-child(odd).hovered,*/\n/*.generated-row-cell:nth-child(even).hovered{*/\n/*\tbackground:none;*/\n/*}*/\n\n.generated-row table tr:first-child td {\n  border-top: none;\n}\n\n.quintable-sub-table {\n  text-align: left;\n}\n\nnav.disabled {\n  pointer-events: none;\n  opacity: 0.75;\n}\n</style>\n\n<style>\n.tooltip-arrow {\n  z-index: 1;\n}\n\n.quintable-tooltip {\n  display: block !important;\n  z-index: 10000;\n}\n\n.quintable-tooltip .tooltip-inner {\n  background: black;\n  color: white;\n  border-radius: 4px;\n  padding: 5px 10px 4px;\n}\n\n.quintable-tooltip .tooltip-arrow {\n  width: 0;\n  height: 0;\n  border-style: solid;\n  position: absolute;\n  margin: 5px;\n  border-color: black;\n  z-index: 1;\n}\n\n.quintable-tooltip[x-placement^=\"top\"] {\n  margin-bottom: 5px;\n}\n\n.quintable-tooltip[x-placement^=\"top\"] .tooltip-arrow {\n  border-width: 5px 5px 0 5px;\n  border-left-color: transparent !important;\n  border-right-color: transparent !important;\n  border-bottom-color: transparent !important;\n  bottom: -5px;\n  left: calc(50% - 5px);\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.quintable-tooltip[x-placement^=\"bottom\"] {\n  margin-top: 5px;\n}\n\n.quintable-tooltip[x-placement^=\"bottom\"] .tooltip-arrow {\n  border-width: 0 5px 5px 5px;\n  border-left-color: transparent !important;\n  border-right-color: transparent !important;\n  border-top-color: transparent !important;\n  top: -5px;\n  left: calc(50% - 5px);\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.quintable-tooltip[x-placement^=\"right\"] {\n  margin-left: 5px;\n}\n\n.quintable-tooltip[x-placement^=\"right\"] .tooltip-arrow {\n  border-width: 5px 5px 5px 0;\n  border-left-color: transparent !important;\n  border-top-color: transparent !important;\n  border-bottom-color: transparent !important;\n  left: -5px;\n  top: calc(50% - 5px);\n  margin-left: 0;\n  margin-right: 0;\n}\n\n.quintable-tooltip[x-placement^=\"left\"] {\n  margin-right: 5px;\n}\n\n.quintable-tooltip[x-placement^=\"left\"] .tooltip-arrow {\n  border-width: 5px 0 5px 5px;\n  border-top-color: transparent !important;\n  border-right-color: transparent !important;\n  border-bottom-color: transparent !important;\n  right: -5px;\n  top: calc(50% - 5px);\n  margin-left: 0;\n  margin-right: 0;\n}\n\n.quintable-tooltip.popover .popover-inner {\n  background: #f9f9f9;\n  color: black;\n  padding: 24px;\n  border-radius: 5px;\n  box-shadow: 0 5px 30px rgba(0, 0, 0, 0.1);\n}\n\n.quintable-tooltip.popover .popover-arrow {\n  border-color: #f9f9f9;\n}\n\n.quintable-tooltip[aria-hidden=\"true\"] {\n  visibility: hidden;\n  opacity: 0;\n  transition: opacity 0.15s, visibility 0.15s;\n}\n\n.quintable-tooltip[aria-hidden=\"false\"] {\n  visibility: visible;\n  opacity: 1;\n  transition: opacity 0.15s;\n}\n</style>\n","/** COMMON START **/\n\nimport PrettyCheck from \"pretty-checkbox-vue/check\";\nimport \"pretty-checkbox/src/pretty-checkbox.scss\";\n\nimport vueSelect from \"vue-select\";\nimport \"vue-select/dist/vue-select.css\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/vue-fontawesome\";\n\nimport VTooltip from \"v-tooltip\";\n\nimport {\n  faAngleDoubleLeft,\n  faAngleDoubleRight,\n  faAngleLeft,\n  faAngleRight,\n  faCaretDown,\n  faCaretUp,\n  faCheck,\n  faChevronDown,\n  faChevronUp,\n  faCircleNotch,\n  faEye,\n  faEyeSlash,\n  faMinus,\n  faPlus,\n  faSort,\n  faSortAmountDown,\n  faSortAmountDownAlt,\n  faSquare,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faAngleDoubleLeft);\nlibrary.add(faAngleDoubleRight);\nlibrary.add(faAngleLeft);\nlibrary.add(faAngleRight);\nlibrary.add(faCaretDown);\nlibrary.add(faCaretUp);\nlibrary.add(faCheck);\nlibrary.add(faChevronDown);\nlibrary.add(faChevronUp);\nlibrary.add(faCircleNotch);\nlibrary.add(faEye);\nlibrary.add(faEyeSlash);\nlibrary.add(faMinus);\nlibrary.add(faPlus);\nlibrary.add(faSort);\nlibrary.add(faSortAmountDown);\nlibrary.add(faSortAmountDownAlt);\nlibrary.add(faSquare);\nlibrary.add(faTimes);\n\n/** COMMON END **/\n\nimport VueQuintable from \"./components/VueQuintable.vue\";\n\n// Declare install function executed by Vue.use()\nlet install = function (Vue) {\n  if (install.installed) return;\n\n  install.installed = true;\n  Vue.component(\"v-select\", vueSelect);\n  Vue.component(\"p-check\", PrettyCheck);\n  Vue.component(\"font-awesome-icon\", FontAwesomeIcon);\n  Vue.component(\"VueQuintable\", VueQuintable);\n  Vue.use(VTooltip, {\n    defaultTemplate:\n      '<div class=\"quintable-tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    defaultClass: \"\",\n  });\n};\n\n// Create module definition for Vue.use()\nconst plugin = {\n  install,\n};\n\n// Auto-install when vue is found (eg. in browser via <script> tag)\nlet GlobalVue = null;\nif (typeof window !== \"undefined\") {\n  GlobalVue = window.Vue;\n} else if (typeof global !== \"undefined\") {\n  GlobalVue = global.Vue;\n}\nif (GlobalVue) {\n  GlobalVue.use(plugin);\n}\n\n// To allow use as module (npm/webpack/etc.) export component\nexport default {\n  VueQuintable: VueQuintable,\n  install: install,\n};\n"],"names":["e","t","module","this","i","s","n","r","o","a","u","h","l","d","c","getRandomValues","rnds8","rngBrowserModule","rnds","byteToHex","bytesToUuid","buf","offset","bth","bytesToUuid_1","rng","require$$0","require$$1","v4","options","ii","v4_1","_sfc_main","randomUUID","b","regex","axios","pagination","numberOfVisibleRowsFillerWord","select","ajaxRequestDelay","hoverClass","multiSort","pageSort","multiSortSelect","pageSortSelect","ajaxUrl","selectPosition","expandedAll","useFuzzySearch","prettySelect","rowsSelect","disallowAllOption","hideEmptyColumns","ignoreSortEmptyColumns","search","searchLength","searchPlaceholder","multiSortPlaceholder","pageSortPlaceholder","filterRelation","filterGroupRelation","rowsPlaceholder","emptyPlaceholder","selectAll","selectAllRows","storeState","testLocalStorage","defaultSelected","hideRowToggle","expandedRowIcon","collapsedRowIcon","pageRange","searchClass","searchContainerClass","requestMethod","number","headlines","breakpoints","hiddenCols","sorts","stickyCols","alignments","columnClasses","ignoreEmpty","columns","visible","onlyVisibleSortedRows","index","borderHigh","borderLow","counter","rows","generatedRows","x","cells","generatedCells","bp","j","col","stickyRows","stickyCells","hide","val","row","cellClasses","rAlign","classes","colAlign","splitted","hidden","rowIndex","iClasses","item","pages","start","off","match","searched","textVal","fuzzy","k","group","filter","shows","cols","ignore","ignoredCol","sort","indexes","key","value","clear","old","selected","currentItem","currentIndex","query","data","factor","result","cIndex","cell","formatted","bool","tmp","element","className","tagName","isLink","shouldPrevent","force","filterValues","results","filters","spaces","str","cmp","found","allIncluding","operator","filterProperties","cmpFunction","values","arr","page","sortIndex","asc","preventReset","allRows","visibleIndexes","sortedIndexesBefore","length","sortableIndexes","compare","keys","currentKey","cellsA","cellsB","aValue","bValue","finalRows","counterRows","counterAdded","clearSelected","accessor","clearSortAndPage","params","headers","response","error","el","regenerate","deleteStore","rowsPerPage","selectedRows","sortIndexes","library","faAngleDoubleLeft","faAngleDoubleRight","faAngleLeft","faAngleRight","faCaretDown","faCaretUp","faCheck","faChevronDown","faChevronUp","faCircleNotch","faEye","faEyeSlash","faMinus","faPlus","faSort","faSortAmountDown","faSortAmountDownAlt","faSquare","faTimes","install","Vue","vueSelect","PrettyCheck","FontAwesomeIcon","VueQuintable","VTooltip","plugin","GlobalVue"],"mappings":"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"}